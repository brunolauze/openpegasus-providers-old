//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "CIM_MemberOfCollection is an aggregation used to establish "
       "membership of ManagedElements in a Collection." )]
class CIM_MemberOfCollection {

      [Key, Aggregate, Description ( 
          "The Collection that aggregates members." )]
   CIM_Collection REF Collection;

      [Key, Description ( "The aggregated member of the Collection." )]
   CIM_ManagedElement REF Member;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "CIM_OrderedMemberOfCollection is an aggregation used to "
       "establish an ordered membership of ManagedElements in a "
       "Collection." )]
class CIM_OrderedMemberOfCollection : CIM_MemberOfCollection {

      [Description ( 
          "AssignedSequence is an unsigned integer \'n\' that "
          "indicates the relative position of members within a "
          "Collection. When \'n\' is a positive integer, it "
          "indicates a place in the sequence of members, with "
          "smaller integers indicating earlier positions in the "
          "sequence. The special value \'0\' indicates \'don\'t "
          "care\'. If two or more members have the same non-zero "
          "sequence number, then the ordering between those members "
          "is irrelevant, but they must all be ordered at the "
          "appropriate place in the overall sequence. \n"
          "\n"
          "A series of examples will make ordering of members "
          "clearer: \n"
          "If all members have the same sequence number, \n"
          "regardless of whether it is \'0\' or non-zero, any \n"
          "order is acceptable. \n"
          "o The values: \n"
          "1:MEMBER A \n"
          "2:MEMBER B \n"
          "1:MEMBER C \n"
          "3:MEMBER D \n"
          "indicate two acceptable orders: A,C,B,D or C,A,B,D, \n"
          "because A and C can be ordered in either sequence, but \n"
          "only at the \'1\' position. \n"
          "\n"
          "Note that the non-zero sequence numbers do not need to "
          "start with \'1\', and they do not need to be "
          "consecutive. However, the sequencenumbers must reflect "
          "their relative magnitude." )]
   uint64 AssignedSequence;


};



class UNIX_OrderedMemberOfCollection : CIM_OrderedMemberOfCollection
{

};

