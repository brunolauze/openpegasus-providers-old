//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalData is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedElements. These statistics MUST represent "
       "the most recent observations and MUST NOT be provided if "
       "irrelevant or stale. Note that this class uses a simplified "
       "naming/identity algorithm as compared to "
       "CIM_StatisticalInformation." )]
class CIM_StatisticalData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "StatisticalData. In addition, the user friendly name can "
          "be used as a index property for a search of query. "
          "(Note: Name does not have to be unique within a "
          "namespace.)" )]
   string ElementName;

      [Description ( 
          "The time, relative to managed element where the "
          "statistic was collected, when the first measurement was "
          "taken. If the statistic is reset, the StartStatisticTime "
          "is the time when the reset was performed." )]
   datetime StartStatisticTime;

      [Description ( 
          "The time the most recent measurement was taken, relative "
          "to the managed element where the statistic was "
          "collected." )]
   datetime StatisticTime;

      [Description ( 
          "Some statistics are sampled at consistent time "
          "intervals. This property provides the sample interval so "
          "that client applications can determine the minimum time "
          "that new statistics should be pulled. If the statistics "
          "are not sampled at consistent time intervals, this "
          "property must be set to a zero time interval." )]
   datetime SampleInterval = "00000000000000.000000:000";


      [Description ( 
          "Method to reset one or more of the instance\'s "
          "statistics. The method takes one parameter as input - an "
          "array of strings indicating which statistics to reset. "
          "If all the statistics in the instance should be reset, "
          "the first element of the array MUST be set to \"All\" or "
          "\"ALL\". If one or more individual statistics should be "
          "reset, the corresponding property names are entered into "
          "the elements of the array. \n"
          "The method returns 0 if successful, 1 if not supported, "
          "and any other value if an error occurred. A method is "
          "specified so that the StatisticalInformation\'s "
          "provider/ instrumentation, which calculates the "
          "statistics, can reset its internal processing, counters, "
          "etc. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetSelectedStats(
         [IN, Description ( 
             "Array of strings indicating which statistics to reset."
              )]
      string SelectedStatistics[]);

};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "CIM_CIMOMStatisticalData provides statistical data about the "
       "performance of the CIM Object Manager. Each object of this "
       "class provides elapsed time and size data for a particular "
       "type of CIM operation. All operations of that type, regardless "
       "of the CIM operations protocol being used, are accumulated in "
       "one object and covers the CIM operations issued by all clients "
       "of the Object Manager scoping the instance. Batched CIM "
       "operations are accumulated into a separate operation type for "
       "\"Batched\". The counters in this class SHOULD be implemented "
       "such that they always increment and naturally wrap around when "
       "their numerical limit is exceeded. A client that calculates "
       "the difference of two snapshots of a counter at the beginning "
       "and end of a measurement interval should get the correct "
       "result, even if there was a wrap-around in between obtaining "
       "the two snapshots. (Two or more wrap arounds will result in "
       "wrong data being calculated.) The gathering of the data can be "
       "controlled through the property, "
       "CIM_ObjectManager.GatherStatisticalData. The time interval to "
       "which the statistical data applies, ends at the current time "
       "and therefore includes the most current CIM operations. The "
       "interval starts when the statistical data gathering was last "
       "turned on for the Object Manager." )]
class CIM_CIMOMStatisticalData : CIM_StatisticalData {

      [Override ( "InstanceID" ), 
       Description ( 
          "The InstanceID property opaquely identifies a unique "
          "instance of CIMOMStatisticalData and MUST be unique "
          "within a namespace. In order to ensure uniqueness, the "
          "value of InstanceID MUST be constructed in the following "
          "manner: \n"
          "CIM<ID> \n"
          "The <ID> MUST include a CIM Object Manager specified "
          "unique identifier." )]
   string InstanceID;

      [Required, Description ( 
          "The OperationType property identifies the type of CIM "
          "operation for which data is reported in this instance. "
          "Batched CIM operations (consisting of multiple simple "
          "CIM operations) are reported against the \"Batched\" "
          "type only." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26" }, 
       Values { "Unknown", "Other", "Batched", "GetClass", 
          "GetInstance", "DeleteClass", "DeleteInstance", 
          "CreateClass", "CreateInstance", "ModifyClass", 
          // 10              
          "ModifyInstance", 
          "EnumerateClasses", "EnumerateClassNames", 
          "EnumerateInstances", "EnumerateInstanceNames", 
          "ExecQuery", "Associators", "AssociatorNames", 
          "References", "ReferenceNames", 
          // 20              
          "GetProperty", 
          "SetProperty", "GetQualifier", "SetQualifier", 
          "DeleteQualifier", "EnumerateQualifiers", 
          "IndicationDelivery" }, 
       ModelCorrespondence { 
          "CIM_CIMOMStatisticalData.OtherOperationType" }]
   uint16 OperationType;

      [Description ( 
          "The OtherOperationType property identifies the operation "
          "if the OperationType property has a value of 1 "
          "(\"Other\"). For all other values of OperationType, the "
          "property is NULL." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_CIMOMStatisticalData.OperationType" }]
   string OtherOperationType;

      [Required, Description ( 
          "The NumberOfOperations property contains the number of "
          "CIM operations of the specified type. This property can "
          "be used to calculate average values per CIM operation." ), 
       Counter]
   uint64 NumberOfOperations;

      [Required, Description ( 
          "The CimomElapsedTime property contains the elapsed time "
          "spent in the CIM Object Manager for this operation type, "
          "not counting the elapsed time spent in providers and the "
          "underlying instrumentation. The measurement points for "
          "this property SHOULD be at the transport layer interface "
          "on the network side, and at the provider interface on "
          "the instrumentation side of the CIM Object Manager." )]
   datetime CimomElapsedTime;

      [Required, Description ( 
          "The ProviderElapsedTime property contains the elapsed "
          "time spent in all providers involved with this operation "
          "type, including the underlying instrumentation. The "
          "measurement point for this property SHOULD be from the "
          "provider interface of the CIM Object Manager." )]
   datetime ProviderElapsedTime;

      [Description ( 
          "The RequestSize property contains the size of the "
          "operation requests sent to the CIM Object Manager. Any "
          "overhead of protocols above the transport protocol "
          "SHOULD be included in the count. For example, for the "
          "HTTP protocol, the size would include the size of the "
          "HTTP payload and the size of the HTTP headers." ), 
       Units ( "Bytes" ), 
       Counter, PUnit ( "byte" )]
   uint64 RequestSize;

      [Description ( 
          "The ResponseSize property contains the size of the "
          "operation responses sent back from the CIM Object "
          "Manager. Any overhead of protocols above the transport "
          "protocol SHOULD be included in the count. For example, "
          "for the HTTP protocol, the size would include the size "
          "of the HTTP payload and the size of the HTTP headers." ), 
       Units ( "Bytes" ), 
       Counter, PUnit ( "byte" )]
   uint64 ResponseSize;


};



class UNIX_CIMOMStatisticalData : CIM_CIMOMStatisticalData
{

};

