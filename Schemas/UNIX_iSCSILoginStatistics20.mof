//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalData is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedElements. These statistics MUST represent "
       "the most recent observations and MUST NOT be provided if "
       "irrelevant or stale. Note that this class uses a simplified "
       "naming/identity algorithm as compared to "
       "CIM_StatisticalInformation." )]
class CIM_StatisticalData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "StatisticalData. In addition, the user friendly name can "
          "be used as a index property for a search of query. "
          "(Note: Name does not have to be unique within a "
          "namespace.)" )]
   string ElementName;

      [Description ( 
          "The time, relative to managed element where the "
          "statistic was collected, when the first measurement was "
          "taken. If the statistic is reset, the StartStatisticTime "
          "is the time when the reset was performed." )]
   datetime StartStatisticTime;

      [Description ( 
          "The time the most recent measurement was taken, relative "
          "to the managed element where the statistic was "
          "collected." )]
   datetime StatisticTime;

      [Description ( 
          "Some statistics are sampled at consistent time "
          "intervals. This property provides the sample interval so "
          "that client applications can determine the minimum time "
          "that new statistics should be pulled. If the statistics "
          "are not sampled at consistent time intervals, this "
          "property must be set to a zero time interval." )]
   datetime SampleInterval = "00000000000000.000000:000";


      [Description ( 
          "Method to reset one or more of the instance\'s "
          "statistics. The method takes one parameter as input - an "
          "array of strings indicating which statistics to reset. "
          "If all the statistics in the instance should be reset, "
          "the first element of the array MUST be set to \"All\" or "
          "\"ALL\". If one or more individual statistics should be "
          "reset, the corresponding property names are entered into "
          "the elements of the array. \n"
          "The method returns 0 if successful, 1 if not supported, "
          "and any other value if an error occurred. A method is "
          "specified so that the StatisticalInformation\'s "
          "provider/ instrumentation, which calculates the "
          "statistics, can reset its internal processing, counters, "
          "etc. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetSelectedStats(
         [IN, Description ( 
             "Array of strings indicating which statistics to reset."
              )]
      string SelectedStatistics[]);

};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "Statistics for Logins and Logouts to or from an iSCSI Node. An "
       "instance of this class will be associated by "
       "ElementStatisticalData to an instance of "
       "SCSIProtocolController that represents the Node. The Node can "
       "be either an Initiator or Target and so the interpretation of "
       "the properties in this class varies accordingly." )]
class CIM_iSCSILoginStatistics : CIM_StatisticalData {

      [Description ( 
          "This property counts the number of times a login attempt "
          "from this node(initiator) or to this node(target) has "
          "failed." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginFailures", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginFailures" }]
   uint64 LoginFailures;

      [Description ( 
          "The timestamp of the most recent failure of a login "
          "attempt from this node(initiator) or to this "
          "node(target). A value of zero indicates that no such "
          "failures have occurred since the last system boot." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastFailureTime", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastFailureTime" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName" }]
   datetime LastLoginFailureTime;

      [Description ( 
          "The type of the most recent failure of a login attempt "
          "from this node(initiator) or to this node(target)." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Negotiate", "Authenticate", "Authorize", 
          "Redirect" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastFailureType", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastFailureType" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.OtherLastLoginFailureType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureTime", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName" }]
   uint16 LastLoginFailureType;

      [Description ( 
          "A string describing the type of the last login failure "
          "when LastLoginFailureType is equal to the value 1, "
          "\"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureType" }]
   string OtherLastLoginFailureType;

      [Description ( 
          "The iSCSI name of the remote node that failed the last "
          "login attempt." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastTgtFailureName", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastIntrFailureName" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureTime", 
          "CIM_iSCSILoginStatistics.LastLoginFailureType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddressType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddress" }]
   string LastLoginFailureRemoteNodeName;

      [Description ( 
          "The type of Internet Network Address of the remote node "
          "that failed the last login attempt." ), 
       ValueMap { "1", "2" }, 
       Values { "IPv4", "IPv6" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastTgtFailureAddrType", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastIntrFailureAddrType" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddress" }]
   uint16 LastLoginFailureRemoteAddressType;

      [Description ( 
          "An Internet Network Address giving the host address of "
          "the remote node that failed the last login attempt." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastTgtFailureAddr", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastIntrFailureAddr" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddressType" }]
   uint32 LastLoginFailureRemoteAddress;

      [Description ( 
          "The count of Login Response PDUs with status 0x0000, "
          "Accept Login, received by this node(initator), or "
          "transmitted by this node (target)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginAcceptRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginAccepts" }]
   uint64 SuccessfulLogins;

      [Description ( 
          "If the node is an initiator this property is the number "
          "of times it has aborted a login because parameter "
          "negotiation with the target failed. \n"
          "If the node is a target the property is the number of "
          "times a it has effectively refused a login because the "
          "parameter negotiation failed. While this situation can "
          "occur, the exact mechanism is as yet undefined in the "
          "iSCSI Protocol Spec." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginNegotiateFails", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginNegotiateFails" }]
   uint64 NegotiationLoginFailures;

      [Description ( 
          "If the node is an initiator this property is the number "
          "of times it has aborted a login because the target could "
          "not be authenticated. If the node is a target this "
          "property is the count of Login Response PDUs with status "
          "0x0201, Authentication Failed, transmitted by this "
          "target." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginAuthenticateFails", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginAuthenticateFails" }]
   uint64 AuthenticationLoginFailures;

      [Description ( 
          "If the node is an initiator this property is the count "
          "of Login Response PDUs with status class 0x201, "
          "\'Authentication Failed\', received by this initiator. "
          "If the node is a target the property is the count of "
          "Login Response PDUs with status 0x0202, \'Forbidden "
          "Target\', transmitted by this target." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginAuthFailRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginAuthorizeFails" }]
   uint64 AuthorizationLoginFailures;

      [Description ( 
          "The count of Login Response PDUs with status class 0x01, "
          "Redirection, received by this node(initiator) or "
          "transmitted by this node(target)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginRedirectRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginRedirects" }]
   uint64 LoginRedirects;

      [Description ( 
          "The number of failure Login Response PDUs which were "
          "received by this node(initiator) or were transmitted by "
          "this node(target), and which were not counted by any "
          "other property in this class." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginOtherFailRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginOtherFails" }]
   uint64 OtherLoginFailures;

      [Description ( 
          "The count of Logout Command PDUs generated by this node "
          "(initiator) or received by this node(target), with "
          "reason code 0 (closes the session)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLogoutNormals", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLogoutNormals" }]
   uint64 NormalLogouts;

      [Description ( 
          "The count of Logout Command PDUs generated by this node, "
          "(initiator) or received by this node(target), with any "
          "reason code other than 0." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLogoutOthers", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLogoutOthers" }]
   uint64 OtherLogouts;


};



class UNIX_iSCSILoginStatistics : CIM_iSCSILoginStatistics
{

};

