//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association describes a predecessor-successor "
       "relationship between a MeterService and one or more "
       "ConditioningService objects that process traffic from the "
       "meter. For example, for devices that implement preamble "
       "marking, the FollowingService reference (after the meter) is a "
       "PreambleMarkerService - to record the results of the metering "
       "in the preamble. \n"
       "\n"
       "It might be expected that the NextServiceAfterMeter "
       "association would subclass from NextService. However, meters "
       "are 1:n fan-out elements, and require a mechanism to "
       "distinguish between the different results/outputs of the "
       "meter. Therefore, this association defines a new key property, "
       "MeterResult, which is used to record the result and identify "
       "the output through which this traffic left the meter." )]
class CIM_NextServiceAfterMeter {

      [Key, Description ( 
          "The preceding MeterService, \'earlier\' in the "
          "processing sequence for a packet." )]
   CIM_MeterService REF PrecedingService;

      [Key, Description ( 
          "The \'next\' or following ConditioningService." )]
   CIM_ConditioningService REF FollowingService;

      [Key, Description ( 
          "Information on the result of the metering. Traffic is "
          "distinguished as being conforming, non-conforming, or "
          "partially conforming. More complicated metering can be "
          "built either by extending the enumeration or by "
          "cascading meters." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Conforming", "Partially Conforming", 
          "Non-Conforming" }]
   uint16 MeterResult;


};



class UNIX_NextServiceAfterMeter : CIM_NextServiceAfterMeter
{

};

