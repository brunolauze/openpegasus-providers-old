//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Component is a generic association used to establish \'part "
       "of\' relationships between Managed Elements. For example, it "
       "could be used to define the components or parts of a System." )]
class CIM_Component {

      [Key, Aggregate, Description ( 
          "The parent element in the association." )]
   CIM_ManagedElement REF GroupComponent;

      [Key, Description ( "The child element in the association." )]
   CIM_ManagedElement REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "CIM_PolicyComponent is a generic association used to establish "
       "\'part of\' relationships between the subclasses of "
       "CIM_Policy. For example, the PolicyConditionInPolicyRule "
       "association defines that PolicyConditions are part of a "
       "PolicyRule." )]
class CIM_PolicyComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent Policy in the association." )]
   CIM_Policy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The child/part Policy in the association." )]
   CIM_Policy REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicyActions may be aggregated into rules and into compound "
       "actions. PolicyActionStructure is the abstract aggregation "
       "class for the structuring of policy actions." )]
class CIM_PolicyActionStructure : CIM_PolicyComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "PolicyAction instances may be aggregated into either "
          "PolicyRule instances or CompoundPolicyAction instances." )]
   CIM_Policy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "A PolicyAction aggregated by a PolicyRule or CompoundPolicyAction."
           )]
   CIM_PolicyAction REF PartComponent;

      [Description ( 
          "ActionOrder is an unsigned integer \'n\' that indicates "
          "the relative position of a PolicyAction in the sequence "
          "of actions associated with a PolicyRule or "
          "CompoundPolicyAction. When \'n\' is a positive integer, "
          "it indicates a place in the sequence of actions to be "
          "performed, with smaller integers indicating earlier "
          "positions in the sequence. The special value \'0\' "
          "indicates \'don\'t care\'. If two or more PolicyActions "
          "have the same non-zero sequence number, they may be "
          "performed in any order, but they must all be performed "
          "at the appropriate place in the overall action sequence. \n"
          "\n"
          "A series of examples will make ordering of PolicyActions "
          "clearer: \n"
          "o If all actions have the same sequence number, "
          "regardless of whether it is \'0\' or non-zero, any order "
          "is acceptable. \n"
          "o The values: \n"
          "1:ACTION A \n"
          "2:ACTION B \n"
          "1:ACTION C \n"
          "3:ACTION D \n"
          "indicate two acceptable orders: A,C,B,D or C,A,B,D, \n"
          "since A and C can be performed in either order, but only "
          "at the \'1\' position. \n"
          "o The values: \n"
          "0:ACTION A \n"
          "2:ACTION B \n"
          "3:ACTION C \n"
          "3:ACTION D \n"
          "require that B,C, and D occur either as B,C,D or as "
          "B,D,C. Action A may appear at any point relative to B, "
          "C, and D. Thus the complete set of acceptable orders is: "
          "A,B,C,D; B,A,C,D; B,C,A,D; B,C,D,A; A,B,D,C; B,A,D,C; "
          "B,D,A,C; B,D,C,A. \n"
          "\n"
          "Note that the non-zero sequence numbers need not start "
          "with \'1\', and they need not be consecutive. All that "
          "matters is their relative magnitude." )]
   uint16 ActionOrder;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A PolicyRule aggregates zero or more instances of the "
       "PolicyAction class, via the PolicyActionInPolicyRule "
       "association. A Rule that aggregates zero Actions is not "
       "valid--it may, however, be in the process of being entered "
       "into a PolicyRepository or being defined for a System. "
       "Alternately, the actions of the policy may be explicit in the "
       "definition of the PolicyRule. Note that a PolicyRule should "
       "have no effect until it is valid. \n"
       "\n"
       "The Actions associated with a PolicyRule may be given a "
       "required order, a recommended order, or no order at all. For "
       "Actions represented as separate objects, the "
       "PolicyActionInPolicyRule aggregation can be used to express an "
       "order. \n"
       "\n"
       "This aggregation does not indicate whether a specified action "
       "order is required, recommended, or of no significance; the "
       "property SequencedActions in the aggregating instance of "
       "PolicyRule provides this indication." )]
class CIM_PolicyActionInPolicyRule : CIM_PolicyActionStructure {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property represents the PolicyRule that contains "
          "one or more PolicyActions." )]
   CIM_PolicyRule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "This property holds the name of a PolicyAction contained "
          "by one or more PolicyRules." )]
   CIM_PolicyAction REF PartComponent;


};



class UNIX_PolicyActionInPolicyRule : CIM_PolicyActionInPolicyRule
{

};

