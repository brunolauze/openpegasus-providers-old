//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_ServiceSAPDependency is an association between a Service "
       "and a ServiceAccessPoint that indicates that the referenced "
       "SAP is utilized by the Service to provide its functionality. "
       "For example, Boot Services can invoke BIOS Disk Services "
       "(interrupts) in order to function." )]
class CIM_ServiceSAPDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The required ServiceAccessPoint." )]
   CIM_ServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Service that is dependent on an underlying SAP." )]
   CIM_Service REF Dependent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "A switch participating in the spanning tree maintains "
       "spanning-tree specific information about each port whose "
       "forwarding is determined by the spanning tree. This "
       "association represents that information." )]
class CIM_SwitchPortSpanningTree : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( "The SwitchPort." )]
   CIM_SwitchPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The SpanningTreeService." )]
   CIM_SpanningTreeService REF Dependent;

      [Description ( 
          "The priority assigned to the port. Contained in the "
          "first octet of the two-octet port ID; the other octet is "
          "the port number." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortPriority" }]
   uint8 Priority;

      [Description ( 
          "The current state of the port as determined by the "
          "spanning tree protocol." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Disabled", "Blocking", "Listening", "Learning", 
          "Forwarding", "Broken" }, 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortState" }]
   uint16 State;

      [Deprecated { "CIM_EnabledLogicalElement.EnabledState" }, 
       Description ( 
          "The enabled/disabled status of the port. This property "
          "is deprecated since the status of the port is available "
          "by inheritance from EnabledLogicalElement." ), 
       ValueMap { "1", "2" }, 
       Values { "Enabled", "Disabled" }, 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortEnable" }]
   uint16 Enable;

      [Description ( 
          "The contribution of this port to the path cost of paths "
          "towards the spanning tree root which include this port." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortPathCost" }]
   uint16 PathCost;

      [Description ( 
          "The bridge identifier of the root bridge for the segment "
          "to which the port is attached, as transmitted by the "
          "designated bridge for the segment." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedRoot" }]
   string DesignatedRoot;

      [Description ( 
          "The cost of the path to the root offered by the "
          "designated bridge for the segment." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedCost" }]
   uint16 DesignatedCost;

      [Description ( 
          "The bridge identifier of the designated bridge for the "
          "segment to which the port is attached." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedBridge" }]
   string DesignatedBridge;

      [Description ( 
          "The port identifier of the port on the designated bridge "
          "serving the segment to which the port is attached." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedPort" }]
   uint16 DesignatedPort;


};



class UNIX_SwitchPortSpanningTree : CIM_SwitchPortSpanningTree
{

};

