//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "OrganizationalEntity is an abstract class from which classes "
       "that fit into an organizational structure are derived." )]
class CIM_OrganizationalEntity : CIM_ManagedElement {


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "UserEntity is an abstract class that represents users - their "
       "names, contact data and similar information." )]
class CIM_UserEntity : CIM_OrganizationalEntity {


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Deprecated { "CIM_Identity" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::UsersAccess" ), 
    Description ( 
       "The UsersAccess object class is used to specify a \'user\' "
       "that is permitted access to resources. The ManagedElement that "
       "has access to the resources (represented in the model using "
       "the ElementAsUser association) may be a person, a service, a "
       "service access point or any collection thereof. \n"
       "\n"
       "This class is deprecated in lieu of the simpler CIM_Identity "
       "abstraction. The UsersAccess class combines credential "
       "requirements (in the form of biometric requirements) with the "
       "concepts of organizational information (via its position in "
       "the inheritance hierarchy), and identity management. These "
       "concepts need to be separated to be better understood and "
       "managed - hence, the deprecation." )]
class CIM_UsersAccess : CIM_UserEntity {

      [Deprecated { "No value" }, 
       Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_Identity.ElementName" }, 
       Key, Description ( 
          "The Name property defines the label by which the object is known."
           ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "CIM_Identity.InstanceID" }, 
       Key, Description ( 
          "The ElementID property uniquely specifies the "
          "ManagedElement object instance that is the user "
          "represented by the UsersAccess object instance. The "
          "ElementID is formatted similarly to a model path except "
          "that the property-value pairs are ordered in "
          "alphabetical order (US ASCII lexical order)." )]
   string ElementID;

      [Deprecated { "No value" }, 
       Description ( 
          "Biometric information used to identify a person. The "
          "property value is left null or set to \'N/A\' for "
          "non-human user or a user not using biometric information "
          "for authentication. This property is deprecated as it "
          "represents required Credential information and is more "
          "correctly modeled as a specific biometric credential." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "N/A", "Other", "Facial", "Retina", "Mark", 
          "Finger", "Voice", "DNA-RNA", "EEG" }]
   uint16 Biometric[];


};



class UNIX_UsersAccess : CIM_UsersAccess
{

};

