//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.1" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "ElementSettingData represents the association between "
       "ManagedElements and applicable setting data. This association "
       "also describes whether this is a default or current setting." )]
class CIM_ElementSettingData {

      [Key, Description ( "The managed element." )]
   CIM_ManagedElement REF ManagedElement;

      [Key, Description ( 
          "The SettingData object associated with the element." )]
   CIM_SettingData REF SettingData;

      [Description ( 
          "An enumerated integer indicating that the referenced "
          "setting is a default setting for the element, or that "
          "this information is unknown." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Is Default", "Is Not Default" }]
   uint16 IsDefault;

      [Description ( 
          "An enumerated integer indicating that the referenced "
          "setting is currently being used in the operation of the "
          "element, or that this information is unknown." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Is Current", "Is Not Current" }]
   uint16 IsCurrent;

      [Description ( 
          "An enumerated integer indicating whether or not the "
          "referenced setting is the next setting to be applied. "
          "For example, the application could take place on a "
          "re-initialization, reset, reconfiguration request. This "
          "could be a permanent setting, or a setting used only one "
          "time, as indicated by the flag. If it is a permanent "
          "setting then the setting is applied every time the "
          "managed element reinitializes, until this flag is "
          "manually reset. However, if it is single use, then the "
          "flag is automatically cleared after the settings are "
          "applied. Also note that if this flag is specified (i.e. "
          "set to value other than \"Unknown\"), then this takes "
          "precedence over any SettingData that may have been "
          "specified as Default. For example: If the managed "
          "element is a computer system, and the value of this flag "
          "is \"Is Next\", then the setting will be effective next "
          "time the system resets. And, unless this flag is "
          "changed, it will persist for subsequent system resets. "
          "However, if this flag is set to \"Is Next For Single "
          "Use\", then this setting will only be used once and the "
          "flag would be reset after that to \"Is Not Next\". So, "
          "in the above example, if the system reboots in a quick "
          "succession, the setting will not be used at the second "
          "reboot." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Is Next", "Is Not Next", 
          "Is Next For Single Use" }]
   uint16 IsNext;


};



class UNIX_ElementSettingData : CIM_ElementSettingData
{

};

