//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "Collection is an abstract class that provides a common "
       "superclass for data elements that represent collections of "
       "ManagedElements and its subclasses." )]
class CIM_Collection : CIM_ManagedElement {


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "The CollectionOfMSEs object allows the grouping of Managed "
       "SystemElements for various identification purposes and to "
       "reduce the complexity of associating Settings and "
       "Configurations. It is abstract to require further definition "
       "and semantic refinement in subclasses. The CollectionOfMSEs "
       "object does not carry any state or status information, but "
       "represents only a grouping or \'bag\' of Elements. For this "
       "reason, it is incorrect to subclass groups that have state or "
       "status from CollectionOfMSEs. An example is CIM_Redundancy "
       "Group (which is subclassed from LogicalElement). \n"
       "Collections typically aggregate similar (\'like\') objects,but "
       "they are not required to do so. Collections simply identify "
       "\'bags\' and might represent an optimization. This purpose is "
       "especially true with respect to their association to Settings "
       "and Configurations. Without Collections, you would need to "
       "define individual ElementSetting and ElementConfiguration "
       "associations, to tie Settings and Configuration objects to "
       "individual ManagedSystemElements. There might be duplication "
       "when assigning the same Setting to multiple objects. In "
       "addition, using the Collection object allows the determination "
       "that the Setting and Configuration associations are indeed the "
       "same for the Collection\'s members. This information would "
       "otherwise be obtained by defining the Collection in a "
       "proprietary manner, and then querying the ElementSetting and "
       "ElementConfiguration associations to determine if the "
       "Collection set is completely covered." )]
class CIM_CollectionOfMSEs : CIM_Collection {

      [Description ( 
          "The identification of the Collection object. When "
          "subclassed, the CollectionID property can be overridden "
          "to be a Key property." ), 
       MaxLen ( 256 )]
   string CollectionID;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "A BGP Peer Group is a set of BGP neighbors that share the same "
       "update policies. This enables an administrator to assign "
       "policies to the peer group, instead of individually. This "
       "enables the routers in the Peer Group to optimize UPDATE "
       "messages. Consequently, Peer Groups have a set of restrictions "
       "that must be followed in order to work correctly with external "
       "BGP peers. Otherwise, loss of routing information could occur. \n"
       "\n"
       "A BGPPeerGroup is weak to the AutonomousSystem that contains "
       "it. Therefore, the keys from System must be propagated to it." )]
class CIM_BGPPeerGroup : CIM_CollectionOfMSEs {

      [Key, Description ( 
          "The scoping AutonomousSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping AutonomousSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." )]
   string CreationClassName;

      [Key, Description ( "This is the name of the BGP Peer Group." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "This defines the time interval, in seconds, for the "
          "ConnectRetry timer for the endpoints of the routers in "
          "the PeerGroup. The suggested value is 120 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpConnectRetryInterval" }]
   uint32 ConnectRetryInterval = 120;

      [Description ( 
          "This defines the time interval in seconds for the Hold "
          "TimeConfigured property of the endpoints of the routers "
          "in the PeerGroup. This value must not be less than three "
          "seconds. The suggested value for this timer is 90 "
          "seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerHoldTimeConfigured" }]
   uint16 HoldTimeConfigured = 90;

      [Description ( 
          "This defines the time interval in seconds for the "
          "KeepAliveConfigured timer for the endpoints of the "
          "routers in the PeerGroup. The suggested value for this "
          "property is 30 seconds. The maximum value of this "
          "property is 21845 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerKeepAliveConfigured" }]
   uint16 KeepAliveConfigured = 30;

      [Description ( 
          "This defines the time interval in seconds for the "
          "MinASOriginationInterval timer for the endpoints of the "
          "routers in the PeerGroup. The suggested value for this "
          "property is 15 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerMinASOriginationInterval" }]
   uint16 MinASOriginationInterval = 15;

      [Description ( 
          "This defines the time interval in seconds for the "
          "MinRouteAdvertisementInterval timer for the endpoints of "
          "the routers in the PeerGroup. The suggested value for "
          "this property is 30 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerMinRouteAdvertisementInterval" }]
   uint16 MinRouteAdvertisementInterval = 30;


};



class UNIX_BGPPeerGroup : CIM_BGPPeerGroup
{

};

