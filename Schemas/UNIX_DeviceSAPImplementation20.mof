//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Device" ), 
    Description ( 
       "An association between a ServiceAccessPoint (SAP) and how it "
       "is implemented. The cardinality of this association is "
       "many-to-many. A SAP can be provided by more than one "
       "LogicalDevice, operating in conjunction. And, any Device can "
       "provide more than one ServiceAccessPoint. When many "
       "LogicalDevices are associated with a single SAP, it is assumed "
       "that these elements operate in conjunction to provide the "
       "AccessPoint. If different implementations of a SAP exist, each "
       "of these implementations would result in individual "
       "instantiations of the ServiceAccessPoint object. These "
       "individual instantiations would then have associations to the "
       "unique implementations." )]
class CIM_DeviceSAPImplementation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The LogicalDevice." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ServiceAccessPoint implemented using the LogicalDevice."
           )]
   CIM_ServiceAccessPoint REF Dependent;


};



class UNIX_DeviceSAPImplementation : CIM_DeviceSAPImplementation
{

};

