//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "CIM_ServiceProcess is an association used to establish "
       "relationships between Services and Processes. It is used to "
       "indicate if a Service is running in a particular Process. It "
       "is also used to indicate, via the ExecutionType property, if "
       "the Service started and is wholly responsible for the Process, "
       "or if the Service is running in an existing Process, perhaps "
       "with other unrelated Services, which is owned or started by a "
       "different entity." )]
class CIM_ServiceProcess {

      [Key, Description ( 
          "The Service whose Process is described by this association."
           )]
   CIM_Service REF Service;

      [Key, Description ( 
          "The Process which represents or hosts the executing Service."
           )]
   CIM_Process REF Process;

      [Description ( 
          "Enumeration indicating how the Service runs in the "
          "context of, or owns the Process. \"Unknown\" indicates "
          "that the ExecutionType is not known. \"Other\" indicates "
          "that the ExecutionType does not match any of the values "
          "in the ExecutionType enumeration. \"Executes in Existing "
          "Process\" indicates that the Service is hosted in a "
          "Process that already exists in the system. The lifecycle "
          "of the Service is separate from that of the Process. "
          "\"Exeutes as Independent Process\" indicates that the "
          "Service is responsible for the lifecycle of the Process. "
          "When the Service is started, the Process is created. For "
          "example, ServletEngines can run \"InProcess\" within the "
          "existing Apache processes or \"OutOfProcess\" in its own "
          "servlet engine process. In this case the Apache process "
          "would communicate with the servlet engine process based "
          "on the content of the request. The association may be "
          "many to many." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "Executes in Existing Process", 
          "Executes as Independent Process" }]
   uint16 ExecutionType;


};



class UNIX_ServiceProcess : CIM_ServiceProcess
{

};

