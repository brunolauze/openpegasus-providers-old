//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "The DeviceConnection relationship indicates that two or more "
       "Devices are connected together." )]
class CIM_DeviceConnection : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "A LogicalDevice." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A second LogicalDevice that is connected to the Antecedent Device."
           )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "When several bus and connection speeds are possible, the "
          "NegotiatedSpeed property defines the one that is in use "
          "between the Devices. Speed is specified in bits per "
          "second. If connection or bus speeds are not negotiated, "
          "or if this information is not available or not important "
          "to Device management, the property should be set to 0." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { "MIF.DMTF|Bus Port Association|001.2" }, 
       PUnit ( "bit / second" )]
   uint64 NegotiatedSpeed;

      [Description ( 
          "When several bus and connection data widths are "
          "possible, the NegotiatedDataWidth property defines the "
          "one that is in use between the Devices. Data width is "
          "specified in bits. If data width is not negotiated, or "
          "if this information is not available or not important to "
          "Device management, the property should be set to 0." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Bus Port Association|001.3" }, 
       PUnit ( "bit" )]
   uint32 NegotiatedDataWidth;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "The ControlledBy relationship indicates which Devices are "
       "controlled by a CIM_Controller." )]
class CIM_ControlledBy : CIM_DeviceConnection {

      [Override ( "Antecedent" ), 
       Description ( "The Controller." )]
   CIM_Controller REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The controlled Device." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "The State property indicates whether the Controller is "
          "actively commanding or accessing the Device (value=1) or "
          "not (value=2). Also, the value, \"Unknown\" (0), can be "
          "defined. This information is necessary when a "
          "LogicalDevice can be commanded by, or accessed through, "
          "multiple Controllers." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Active", "Inactive" }]
   uint16 AccessState;

      [Description ( 
          "The time that the downstream Device was last reset by "
          "the Controller." )]
   datetime TimeOfDeviceReset;

      [Description ( 
          "Number of hard resets issued by the Controller. A hard "
          "reset returns the Device to its initialization or "
          "boot-up state. All internal Device state information and "
          "data are lost." ), 
       Counter]
   uint32 NumberOfHardResets;

      [Description ( 
          "Number of soft resets issued by the Controller. A soft "
          "reset does not completely clear current Device state or "
          "data. Exact semantics are dependent on the Device and on "
          "the protocols and mechanisms used to communicate with "
          "the Device." ), 
       Counter]
   uint32 NumberOfSoftResets;

      [Description ( 
          "Address of associated Device in context of the "
          "antecedent Controller." )]
   string DeviceNumber;

      [Description ( 
          "This property describes the accessibility of the device "
          "through the antecedent controller." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "ReadWrite", "ReadOnly", "NoAccess" }]
   uint16 AccessMode;

      [Description ( 
          "The property describes the priority given to accesses of "
          "the device through this controller. The highest priority "
          "path will have the lowest value for this parameter." )]
   uint16 AccessPriority;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_ProtocolControllerAccessesUnit" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Note: The use of this class is deprecated in lieu of "
       "ProtocolControllerForUnit, because the SCSIController class "
       "involved in this association is itself deprecated. The "
       "protocol-related aspects of SCSI are better reflected in the "
       "new classes and associations. \n"
       "Deprecated description: SCSIInterface is a ControlledBy "
       "relationship that indicates which Devices are accessed through "
       "a SCSIController and describes the characteristics of this "
       "access." )]
class CIM_SCSIInterface : CIM_ControlledBy {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSIController." )]
   CIM_SCSIController REF Antecedent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Number of SCSI timeouts that "
          "have occurred since the last hard or soft reset that is "
          "related to the controlled Device. The time of last reset "
          "is indicated in the TimeOfDeviceReset property, "
          "inherited from the ControlledBy association." ), 
       Counter]
   uint32 SCSITimeouts;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Number of SCSI retries that have "
          "occurred since the last hard or soft reset that is "
          "related to the controlled Device. The time of last reset "
          "is indicated in the TimeOfDeviceReset property, "
          "inherited from the ControlledBy association." ), 
       Counter, MappingStrings { 
          "MIF.DMTF|Mass Storage Statistics|001.18" }]
   uint32 SCSIRetries;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI Initiator ID." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.5" }]
   uint32 InitiatorId;

      [Deprecated { 
          "CIM_ProtocolControllerAccessesUnit.TargetControllerNumber" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI Target ID." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.5" }]
   uint32 TargetId;

      [Deprecated { "CIM_ProtocolControllerForDevice.DeviceNumber" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI Target LUN." ), 
       MappingStrings { "MIF.DMTF|Storage Devices|001.4" }]
   uint64 TargetLUN;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: SCSIReservation indicates the "
          "type of SCSI reservation that currently exists between "
          "the source and destination." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "None", "Simple", "Persistent" }]
   uint16 SCSIReservation;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI signal characteristics "
          "being used for this connection. The value listed here "
          "must also be listed in the SignalCapabilities field of "
          "the SCSIController." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Single Ended", "Differential", 
          "Low Voltage Differential", "Optical" }, 
       MappingStrings { "MIF.DMTF|Bus Port|004.4" }, 
       ModelCorrespondence { "CIM_SCSIController.SignalCapabilities" }]
   uint16 SCSISignal;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Maximum number of Command "
          "Descriptor Blocks (CDBs) that can be supported by the "
          "target. This data cannot be obtained under all "
          "circumstances." )]
   uint32 MaxQueueDepth;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The maximum number of concurrent "
          "Command Descriptor Blocks (CDBs) that the initiator will "
          "send to the target. This value should never be greater "
          "than MaxQueueDepth." )]
   uint32 QueueDepthLimit;


};



class UNIX_SCSIInterface : CIM_SCSIInterface
{

};

