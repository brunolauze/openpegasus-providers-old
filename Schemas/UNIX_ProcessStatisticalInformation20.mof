//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalInformation is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedSystemElements. Note that the CIM_ "
       "StatisticalData class uses a simplified naming/identity "
       "algorithm as compared to this class. StatisticalInformation is "
       "not deprecated since its naming algorithm is still in use in "
       "various implementations." )]
class CIM_StatisticalInformation : CIM_ManagedElement {

      [Description ( 
          "The Name property defines the label by which the "
          "statistic or metric is known. When subclassed, the "
          "property can be overridden to be a Key property." ), 
       MaxLen ( 256 )]
   string Name;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.17.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( "The statistics associated with a Unix process." )]
class CIM_UnixProcessStatisticalInformation : CIM_StatisticalInformation {

      [Key, Description ( 
          "The scoping Process\'s ComputerSystem CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CSCreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( 
          "The scoping Process\'s ComputerSystem Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CSName" )]
   string CSName;

      [Key, Description ( 
          "The scoping Process\'s OperatingSystem CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.OSCreationClassName" )]
   string OSCreationClassName;

      [Key, Description ( 
          "The scoping Process\'s OperatingSystem Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.OSName" )]
   string OSName;

      [Key, Description ( "The scoping Process\'s Handle." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.Handle" )]
   string Handle;

      [Key, Description ( "The scoping Process\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CreationClassName" )]
   string ProcessCreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "A string used to identify the related statistics of a "
          "Process. This key allows multiple instances of "
          "statistics to correspond to a single process. The "
          "multiple instances could be used in applications such as "
          "time-sliced statistics." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "The percentage of a CPU\'s time this process is consuming."
           ), 
       Units ( "Percent" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.12" }, 
       PUnit ( "percent" )]
   uint32 CPUTime;

      [Description ( 
          "The number of KiloBytes of real text space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.15" }, 
       PUnit ( "byte * 2^10" )]
   uint64 RealText;

      [Description ( 
          "The number of KiloBytes of real data space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.16" }, 
       PUnit ( "byte * 2^10" )]
   uint64 RealData;

      [Description ( 
          "The number of KiloBytes of real stack space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.17" }, 
       PUnit ( "byte * 2^10" )]
   uint64 RealStack;

      [Description ( 
          "The number of KiloBytes of virtual text space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.18" }, 
       PUnit ( "byte * 2^10" )]
   uint64 VirtualText;

      [Description ( 
          "The number of KiloBytes of virtual data space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.19" }, 
       PUnit ( "byte * 2^10" )]
   uint64 VirtualData;

      [Description ( 
          "The number of KiloBytes of virtual stack space used by "
          "the process." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.20" }, 
       PUnit ( "byte * 2^10" )]
   uint64 VirtualStack;

      [Description ( 
          "The number of KiloBytes of virtual space used for memory "
          "mapped files by the process." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.22" }, 
       PUnit ( "byte * 2^10" )]
   uint64 VirtualMemoryMappedFileSize;

      [Description ( 
          "The number of KiloBytes of shared memory used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.21" }, 
       PUnit ( "byte * 2^10" )]
   uint64 VirtualSharedMemory;

      [Description ( 
          "CPU time of terminated child processes in clock ticks." ), 
       Units ( "Clock Ticks" ), 
       Counter, PUnit ( "count" )]
   uint64 CpuTimeDeadChildren;

      [Description ( 
          "System time of terminated child processes in clock ticks." ), 
       Units ( "Clock Ticks" ), 
       Counter, PUnit ( "count" )]
   uint64 SystemTimeDeadChildren;


};



class UNIX_ProcessStatisticalInformation : CIM_UnixProcessStatisticalInformation
{

};

