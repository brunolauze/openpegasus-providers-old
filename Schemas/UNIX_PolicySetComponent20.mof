//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Component is a generic association used to establish \'part "
       "of\' relationships between Managed Elements. For example, it "
       "could be used to define the components or parts of a System." )]
class CIM_Component {

      [Key, Aggregate, Description ( 
          "The parent element in the association." )]
   CIM_ManagedElement REF GroupComponent;

      [Key, Description ( "The child element in the association." )]
   CIM_ManagedElement REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "CIM_PolicyComponent is a generic association used to establish "
       "\'part of\' relationships between the subclasses of "
       "CIM_Policy. For example, the PolicyConditionInPolicyRule "
       "association defines that PolicyConditions are part of a "
       "PolicyRule." )]
class CIM_PolicyComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent Policy in the association." )]
   CIM_Policy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The child/part Policy in the association." )]
   CIM_Policy REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySetComponent is a concrete aggregation that collects "
       "instances of the subclasses of PolicySet (i.e., PolicyGroups "
       "and PolicyRules). Instances are collected in sets that use the "
       "same decision strategy. They are prioritized relative to each "
       "other, within the set, using the Priority property of this "
       "aggregation. \n"
       "\n"
       "Together, the PolicySet.PolicyDecisionStrategy and PolicySet "
       "Component.Priority properties determine the processing for the "
       "groups and rules contained in a PolicySet. A larger priority "
       "value represents a higher priority. Note that the Priority "
       "property MUST have a unique value when compared with others "
       "defined for the same aggregating PolicySet. Thus, the "
       "evaluation of rules within a set is deterministically "
       "specified." )]
class CIM_PolicySetComponent : CIM_PolicyComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "A PolicySet that aggregates other PolicySet instances." )]
   CIM_PolicySet REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "A PolicySet aggregated into a PolicySet." )]
   CIM_PolicySet REF PartComponent;

      [Description ( 
          "A non-negative integer for prioritizing this PolicySet "
          "component relative to other elements of the same "
          "PolicySet. A larger value indicates a higher priority. "
          "The Priority property MUST have a unique value when "
          "compared with others defined for the same aggregating "
          "PolicySet." )]
   uint16 Priority;


};



class UNIX_PolicySetComponent : CIM_PolicySetComponent
{

};

