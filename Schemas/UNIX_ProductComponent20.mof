//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Component is a generic association used to establish \'part "
       "of\' relationships between Managed Elements. For example, it "
       "could be used to define the components or parts of a System." )]
class CIM_Component {

      [Key, Aggregate, Description ( 
          "The parent element in the association." )]
   CIM_ManagedElement REF GroupComponent;

      [Key, Description ( "The child element in the association." )]
   CIM_ManagedElement REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_ConcreteComponent" }, 
    Aggregation, Composition, Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "The CIM_ProductComponent association defines a containment and "
       "component relationship among Products. For example, a Product "
       "may come bundled with other Products. \n"
       "Note that this association duplicates ProductParentChild. The "
       "latter association is maintained for legacy reasons. This "
       "association, ProductComponent, is added for ease of query and "
       "modeling consistency. Using ProductComponent, an application "
       "can query for all Component relationships for a Product, "
       "versus querying the various Component relationships AND "
       "ProductParentChild." )]
class CIM_ProductComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The Product which contains another Product as a "
          "component. The cardinality of this reference takes the "
          "default values (no minimum or maximum) since an instance "
          "of Product can describe either a general product type, "
          "or a specific item that is acquired. In the case of a "
          "specific item, a cardinality of Max(1) is indicated. "
          "However, when dealing with the general "
          "description/templating of a Product, then it may be a "
          "component of several others and a cardinality of Max(1) "
          "would be invalid." ), 
       ModelCorrespondence { "PRS_ProductComponent.Antecedent" }]
   CIM_Product REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The contained Product." ), 
       ModelCorrespondence { "PRS_ProductComponent.Dependent" }]
   CIM_Product REF PartComponent;


};



class UNIX_ProductComponent : CIM_ProductComponent
{

};

