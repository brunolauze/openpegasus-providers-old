//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "Capabilities is an abstract class whose subclasses describe "
       "abilities and/or potential for use. For example, one may "
       "describe the maximum number of VLANs that can be supported on "
       "a system using a subclass of Capabilities. Capabilities are "
       "tied to the elements which they describe using the "
       "ElementCapabilities association. Note that the cardinality of "
       "the ManagedElement reference is Min(1), Max(1). This "
       "cardinality mandates the instantiation of the "
       "ElementCapabilities association for the referenced instance of "
       "Capabilities. ElementCapabilities describes the existence "
       "requirements and context for the referenced instance of "
       "ManagedElement. Specifically, the ManagedElement MUST exist "
       "and provides the context for the Capabilities. Note that "
       "Capabilities do not indicate what IS configured or "
       "operational, but what CAN or CANNOT exist, be defined or be "
       "used. Note that it is possible to describe both supported and "
       "excluded abilities and functions (both capabilities and "
       "limitations) using this class." )]
class CIM_Capabilities : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "Capabilities. In addition, the user friendly name can be "
          "used as a index property for a search of query. (Note: "
          "Name does not have to be unique within a namespace.)" )]
   string ElementName;


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "EnabledLogicalElementCapabilities describes the capabilities "
       "supported for changing the state of the associated "
       "EnabledLogicalElement." )]
class CIM_EnabledLogicalElementCapabilities : CIM_Capabilities {

      [Description ( 
          "Boolean indicating whether the ElementName can be modified."
           ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|EditName" }, 
       ModelCorrespondence { "CIM_ManagedElement.ElementName" }]
   boolean ElementNameEditSupported;

      [Description ( "Maximum supported ElementName length." ), 
       MaxValue ( 256 ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|MaxNameChars" }, 
       ModelCorrespondence { 
          "CIM_FCSwitchCapabilities.ElementNameEditSupported", 
          "CIM_EnabledLogicalElementCapabilities.ElementNameMask" }]
   uint16 MaxElementNameLen;

      [Description ( 
          "RequestedStatesSupported indicates the possible states "
          "that can be requested when using the method "
          "RequestStateChange on the EnabledLogicalElement." ), 
       ValueMap { "2", "3", "4", "6", "7", "8", "9", "10", "11" }, 
       Values { "Enabled", "Disabled", "Shut Down", "Offline", 
          "Test", "Defer", "Quiesce", "Reboot", "Reset" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestStateChange" }]
   uint16 RequestedStatesSupported[];

      [Description ( 
          "This string expresses the restrictions on "
          "ElementName.The mask is expressed as a regular "
          "expression.See DMTF standard ABNF with the Management "
          "Profile Specification Usage Guide, appendix C for the "
          "regular expression syntax permitted. \n"
          "Since the ElementNameMask can describe the maximum "
          "length of the ElementName,any length defined in the "
          "regexp is in addition to the restriction defined in "
          "MaxElementNameLen (causing the smaller value to be the "
          "maximum length) The ElementName value satisfies the "
          "restriction, if and only if it matches the regular "
          "expression" ), 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElementCapabilities.MaxElementNameLen" }]
   string ElementNameMask;


};


// Copyright (c) 2012 DMTF.  All rights reserved.
   [Version ( "2.35.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "AccountManagementCapabilities describes the capabilities "
       "supported for managing Accounts associated with an instance of "
       "AccountManagementService. AccountManagementCapabilities is "
       "associated with an instance of AccountManagementService "
       "through the ElementCapabilities association." )]
class CIM_AccountManagementCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "OperationsSupported describes the type of operations "
          "that are supported for an Account associated with the AccountManagementService.\n"
          "\"Create\" indicates the AccountManagementService may be "
          "used to create new accounts.\n"
          "\"Modify\" indicates that the associated Accounts may be modified.\n"
          "\"Delete\" indicates that associated Accounts may be "
          "deleted." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "..", "0x8000..0xFFFF" }, 
       Values { "Create", "Modify", "Delete", "CreateUserContact", 
          "CreateUserContactByIdentity", "ModifyUserContact", 
          "DeleteUserContact", "GetAccount", "GetUserContact", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 OperationsSupported[];

      [Description ( 
          "Additional implementation-specific algorithms that a "
          "client may use to encrypt a value in the UserPassword "
          "property when creating or modifying an instance of "
          "CIM_Account. If this property is non-NULL, a client may "
          "select an algorithm in it by setting "
          "CIM_Account.UserPasswordEncryptionAlgorithm to 1 "
          "(\"Other\") and setting "
          "CIM_Account.OtherUserPasswordEncryptionAlgorithm to the "
          "value of the selected algorithm string." ), 
       ModelCorrespondence { 
          "CIM_Account.OtherUserPasswordEncryptionAlgorithm", 
          "CIM_AccountManagementCapabilities.SupportedUserPasswordEncryptionAlgorithms" }]
   string OtherSupportedUserPasswordEncryptionAlgorithms[];

      [Description ( 
          "This property enumerates encryption algorithms that a "
          "client may use to encrypt a value in the UserPassword "
          "property when creating or modifying an instance of "
          "CIM_Account. This capability is aimed at ensuring some "
          "measure of confidentiality when the password is "
          "transferred over an unencrypted transport protocol. An "
          "implementation may elect to accept only encrypted "
          "passwords, without regard to whether the transport "
          "protocol is encrypted. Similarly, a a client may elect "
          "to always provide encrypted passwords to implementations "
          "that accept either unencrypted or encrypted passwords, "
          "even if the underlying transport protocol is encrypted.\n"
          "See CIM_Account property UserPasswordEncryptionAlgorithm "
          "for a description of each enum value." ), 
       ValueMap { "0", "1", "2", ".." }, 
       Values { "None", "Other", "HTTP Digest MD5(A1)", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_Account.UserPasswordEncryptionAlgorithm", 
          "CIM_AccountManagementCapabilities.OtherSupportedUserPasswordEncryptionAlgorithms" }]
   uint16 SupportedUserPasswordEncryptionAlgorithms[];

      [Description ( 
          "A value unique to the specific WBEM server that may be "
          "used in the selected UserPassword encryption algorithm "
          "to ensure a value that is unique among all WBEM servers "
          "even if a user uses the same password on multiple WBEM "
          "servers." ), 
       ModelCorrespondence { 
          "CIM_Account.UserPasswordEncryptionAlgorithm" }]
   string UserPasswordEncryptionSalt;

      [Description ( 
          "MaximumAccountsSupported shall indicate the maximum "
          "number of accounts that may be managed by the associated "
          "instance of CIM_AccountManagementService. Note that if "
          "multiple instances of CIM_AccountManagementService "
          "manage the accounts of a system, the total maximum "
          "number of accounts supported on the system is the sum of "
          "MaximumAccountsSupported for all of the instances of "
          "CIM_AccountManagementService. A value of zero shall "
          "indicate that the maximum number of accounts is unknown "
          "or that a maximum number of accounts is not enforced." )]
   uint16 MaximumAccountsSupported;

      [Description ( 
          "This property enumerates encoding algorithms that a "
          "client may use to encode the UserPassword property when "
          "creating or modifying an instance of CIM_Account. See "
          "CIM_Account property UserPasswordEncoding for a "
          "description of each enum value." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "..", "65536..4294967295" }, 
       Values { "ascii", "kbd", "pin", "UTF-8", "UTF-16", 
          "UTF-16LE", "UTF-16BE", "UCS-2", "UCS-2LE", "UCS-2BE", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_Account.UserPasswordEncoding" }]
   uint32 SupportedUserPasswordEncodings[];


};



class UNIX_AccountManagementCapabilities : CIM_AccountManagementCapabilities
{

};

