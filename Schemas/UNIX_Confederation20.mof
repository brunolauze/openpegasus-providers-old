//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Component is a generic association used to establish \'part "
       "of\' relationships between Managed Elements. For example, it "
       "could be used to define the components or parts of a System." )]
class CIM_Component {

      [Key, Aggregate, Description ( 
          "The parent element in the association." )]
   CIM_ManagedElement REF GroupComponent;

      [Key, Description ( "The child element in the association." )]
   CIM_ManagedElement REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_SystemComponent is a specialization of the CIM_Component "
       "association that establishes \'part of\' relationships between "
       "a System and any ManagedSystemElements of which it is "
       "composed. \n"
       "Use this association with caution when using it instead of a "
       "subclass such as SystemDevice or a peer association such as "
       "HostedService. This class is very broadly defined, which can "
       "lead to erroneous use. For example, Access Points that are "
       "dependent on (and hosted on) a System are NOT Components of "
       "the System. The System is not made up of any AccessPoint "
       "\'parts\', which is why a Dependency association, "
       "HostedAccessPoint, was defined. Similarly, a PhysicalPackage "
       "is not a \'part\' of a System, because the physical element "
       "exists independently of any internal components, software, and "
       "so on. In fact, again, a Dependency relationship is true where "
       "a ComputerSystem is Dependent on its packaging, as described "
       "by the ComputerSystemPackage association." )]
class CIM_SystemComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent System in the Association." )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The child element that is a component of a System." )]
   CIM_ManagedSystemElement REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "The BGP speakers in an AS are required to be fully meshed. "
       "This can lead to a huge number of TCP connections per router. "
       "One way to reduce the peering requirements is to use a "
       "confederation. A confederation effectively partitions one AS "
       "into a group of \'sub-ASs\'. This enables all of the benefits "
       "of IBGP to be applied inside the confederation, while enabling "
       "EBGP to be run between each confederation. It also enables "
       "certain BGP attribute values to be preserved between "
       "confederations. However, to the outside world, the AS with its "
       "confederations appear to be a single AS." )]
class CIM_Confederation : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that contains the confederations." )]
   CIM_AutonomousSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The Confederation within the AutonomousSystem." )]
   CIM_AutonomousSystem REF PartComponent;

      [Description ( 
          "A unique identifier of the AutonomousSystem that "
          "contains the confederations." )]
   uint32 ParentASNumber;

      [Description ( 
          "A unique identifier of the Confederation within the "
          "AutonomousSystem." )]
   uint32 ChildASNumber;


};



class UNIX_Confederation : CIM_Confederation
{

};

