//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2012 DMTF.  All rights reserved.
   [Abstract, Version ( "2.33.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CIM_SettingData is used to represent configuration and and "
       "operational parameters for CIM_ManagedElement instances. There "
       "are a number of different uses of CIM_SettingData supported in "
       "the model today. Additional uses may be defined in the future.\n"
       "Instances of CIM_SettingData may represent Aspects of a "
       "CIM_ManagedElement instance. This is modeled using the "
       "CIM_SettingsDefineState association. CIM_SettingData may be "
       "used to define capabilities when associated to an instance of "
       "CIM_Capabilities through the CIM_SettingsDefineCapabilities "
       "association. \n"
       "Instances of CIM_SettingData may represent different types of "
       "configurations for a CIM_ManagedElement, including persistent "
       "configurations, in progress configuration changes, or "
       "requested configurations. The CIM_ElementSettingData "
       "association is used to model the relationship between a "
       "CIM_SettingData instance and the CIM_ManagedElement for which "
       "it is a configuration. \n"
       "When an instance of CIM_SettingData represents a "
       "configuration, the current operational values for the "
       "parameters of the element are reflected by properties in the "
       "Element itself or by properties in its associations. These "
       "properties do not have to be the same values that are present "
       "in the SettingData object. For example, a modem might have a "
       "SettingData baud rate of 56Kb/sec but be operating at "
       "19.2Kb/sec. \n"
       "Note: The CIM_SettingData class is very similar to "
       "CIM_Setting, yet both classes are present in the model because "
       "many implementations have successfully used CIM_Setting. "
       "However, issues have arisen that could not be resolved without "
       "defining a new class. Therefore, until a new major release "
       "occurs, both classes will exist in the model. Refer to the "
       "Core White Paper for additional information. SettingData "
       "instances can be aggregated together into higher- level "
       "SettingData objects using ConcreteComponent associations." )]
class CIM_SettingData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "must be used with the <OrgID> set to CIM." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of SettingData. "
          "In addition, the user-friendly name can be used as an "
          "index property for a search or query. (Note: The name "
          "does not have to be unique within a namespace.)" )]
   string ElementName;

      [Description ( 
          "Enumeration indicating the type of setting. 0 \"Not "
          "Changeable - Persistent\" indicates the instance of "
          "SettingData represents primordial settings and shall not "
          "be modifiable. 1 \"Changeable - Transient\" indicates "
          "the SettingData represents modifiable settings that are "
          "not persisted. Establishing persistent settings from "
          "transient settings may be supported. 2 \"Changeable - "
          "Persistent\" indicates the SettingData represents a "
          "persistent configuration that may be modified. 3 \"Not "
          "Changeable - Transient\" indicates the SettingData "
          "represents a snapshot of the settings of the associated "
          "ManagedElement and is not persistent." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Not Changeable - Persistent", 
          "Changeable - Transient", "Changeable - Persistent", 
          "Not Changeable - Transient" }]
   uint16 ChangeableType;

      [Description ( 
          "An instance of CIM_SettingData may correspond to a "
          "well-known configuration that exists for an associated "
          "CIM_ManagedElement. If the ConfigurationName property is "
          "non-NULL, the instance of CIM_SettingData shall "
          "correspond to a well-known configuration for a Managed "
          "Element, the value of the ConfigurationName property "
          "shall be the name of the configuration, and the "
          "ChangeableType property shall have the value 0 or 2. A "
          "value of NULL for the ConfigurationName property shall "
          "mean that the instance of CIM_SettingData does not "
          "correspond to a well-known configuration for a Managed "
          "Element or that this information is unknown." )]
   string ConfigurationName;


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.24.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "The ResourceAllocationSettingData class represents settings "
       "specifically related to an allocated resource that are outside "
       "the scope of the CIM class typically used to represent the "
       "resource itself. These settings include information specific "
       "to the allocation that may not be visible to the consumer of "
       "the resource itself. For example, a virtual processor may look "
       "like a 2 ghz processor to the consumer (virtual computer "
       "system), however the virtualization system may use "
       "time-slicing to schedule the the virtual processor to only "
       "allow it to use 1 ghz." )]
class CIM_ResourceAllocationSettingData : CIM_SettingData {

      [Description ( 
          "The type of resource this allocation setting represents." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "..", "0x8000..0xFFFF" }, 
       Values { "Other", "Computer System", "Processor", "Memory", 
          "IDE Controller", "Parallel SCSI HBA", "FC HBA", 
          "iSCSI HBA", "IB HCA", "Ethernet Adapter", 
          "Other Network Adapter", "I/O Slot", "I/O Device", 
          "Floppy Drive", "CD Drive", "DVD drive", "Disk Drive", 
          "Tape Drive", "Storage Extent", "Other storage device", 
          "Serial port", "Parallel port", "USB Controller", 
          "Graphics controller", "IEEE 1394 Controller", 
          "Partitionable Unit", "Base Partitionable Unit", "Power", 
          "Cooling Capacity", "Ethernet Switch Port", 
          "Logical Disk", "Storage Volume", "Ethernet Connection", 
          "DMTF reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.OtherResourceType", 
          "CIM_ResourceAllocationSettingData.ResourceSubType" }]
   uint16 ResourceType;

      [Description ( 
          "A string that describes the resource type when a well "
          "defined value is not available and ResourceType has the "
          "value \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.ResourceType" }]
   string OtherResourceType;

      [Description ( 
          "A string describing an implementation specific sub-type "
          "for this resource. For example, this may be used to "
          "distinguish different models of the same resource "
          "type.The property value shall conform to this format (in "
          "ABNF): vs-type = dmtf-value / other-org-value / "
          "legacy-value dmtf-value = \"DMTF:\" defining-org \":\" "
          "org-vs-type org-value = defining-org \":\" org-vs-type\n"
          "Where: dmtf-value: is a property value defined by DMTF "
          "and is defined in the description of this property. "
          "other-org-value: is a property value defined by a "
          "business entity other than DMTF and is not defined in "
          "the description of this property. legacy-value: is a "
          "property value defined by a business entity other than "
          "DMTF and is not defined in the description of this "
          "property. These values are permitted but recommended to "
          "be deprecated over time. defining-org:\n"
          "is an identifier for the business entity that defines "
          "the virtual system type. It shall include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "that business entity. It shall not be \"DMTF\" and shall "
          "not contain a colon (:). org-vs-type:\n"
          "is an identifier for the virtual system type within the "
          "defining business entity. It shall be unique within the "
          "defining-org. It may use any character allowed for CIM "
          "strings, except for the following: U0000-U001F (Unicode "
          "C0 controls) U0020 (space), note that the reason is that "
          "OVF allows for multiple space-separated vs-type values "
          "in this property. U007F (Unicode C0 controls) "
          "U0080-U009F (Unicode C1 controls)\n"
          "If there is a need to structure the value into segments, "
          "the segments should be separated with a single colon (:).\n"
          "The values of this property shall be processed case "
          "sensitively. They are intended to be processed "
          "programmatically (instead of being a display name) and "
          "should be short.\n"
          "The following DMTF values are defined: DMTF:unknown - "
          "the resource sub-type is unknown or cannot be determined\n"
          "Developers should consult the relevant profile for "
          "defined values." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.ResourceType" }]
   string ResourceSubType;

      [Description ( 
          "This property specifies which ResourcePool the resource "
          "is currently allocated from, or which ResourcePool the "
          "resource will be allocated from when the allocation "
          "occurs." ), 
       ModelCorrespondence { "CIM_ResourcePool.PoolId" }]
   string PoolID;

      [Description ( 
          "Describes the consumers visibility to the allocated resource.\n"
          "A value of \"Passed-Through\" indicates the underlying "
          "or host resource is utilized and passed through to the "
          "consumer, possibly using partitioning. At least one item "
          "shall be present in the HostResource property. \n"
          "A value of \"Virtualized\" indicates the resource is "
          "virtualized and may not map directly to an "
          "underlying/host resource. Some implementations may "
          "support specific assignment for virtualized resources, "
          "in which case the host resource(s) are exposed using the "
          "HostResource property. \n"
          "A value of \"Not represented\" indicates a "
          "representation of the resource does not exist within the "
          "context of the resource consumer." ), 
       ValueMap { "0", "2", "3", "4", "..", "32767..65535" }, 
       Values { "Unknown", "Passed-Through", "Virtualized", 
          "Not represented", "DMTF reserved", "Vendor Reserved" }]
   uint16 ConsumerVisibility;

      [Description ( 
          "This property exposes specific assignment of resources. "
          "Each non-null value of the HostResource property shall "
          "be formated as a URI per RFC3986.\n"
          "If this resource is modeled then a value should be a "
          "WBEM URI (DSP0207). If the resource is not modeled then "
          "see the appropriate profile. \n"
          "Profiles may further constrain the type of URI. A NULL "
          "value or empty array requests the implementation decide "
          "the kind of host resource.\n"
          "If the virtual resource is mapped to more than "
          "oneunderlying resource, this property may be left NULL.\n"
          "If NULL, the DeviceAllocatedFromPool or "
          "ResourceAllocationFromPool associations may be used to "
          "determine the pool of host resources this virtual "
          "resource may use. If specific assignment is utilized, "
          "all underlying resources used by this virtual resource "
          "should be listed.The kind of dependency is specified by "
          "the ConsumerVisibility and the MappingBehavior "
          "properties. Typically the array contains one item, "
          "however multiple host resources may be specified. \n"
          "A client may set the value(s) to indicate that the "
          "requested virtual resource allocation be based on host "
          "resources that are identified by element values." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.ConsumerVisibility", 
          "CIM_ResourceAllocationSettingData.MappingBehavior" }]
   string HostResource[];

      [Description ( 
          "This property specifies the units of allocation used by "
          "the Reservation and Limit properties. For example, when "
          "ResourceType=Processor, AllocationUnits may be set to "
          "hertz*10^6 or percent. When ResourceType=Memory, "
          "AllocationUnits may be set to bytes*10^3. \n"
          "It is expected that profiles constrain the units that "
          "apply in context of particular resource types.\n"
          "The value of this property shall be a legal value of the "
          "Programmatic Units qualifier as defined in Annex C.1 of "
          "DSP0004 V2.5 or later." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.Reservation", 
          "CIM_ResourceAllocationSettingData.Limit" }, 
       IsPUnit]
   string AllocationUnits;

      [Description ( 
          "This property specifies the quantity of resources "
          "presented to the consumer. For example, when "
          "ResourceType=Processor, this property would reflect the "
          "number of discrete Processors presented to the virtual "
          "computer system. When ResourceType=Memory, this property "
          "could reflect the number of MB reported to the virtual "
          "computer system.\n"
          "The value of the VirtualQuantity property should be "
          "expressed in units as defined by the value of the "
          "VirtualQuantityUnits property." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.VirtualQuantityUnits" }]
   uint64 VirtualQuantity;

      [Description ( 
          "This property specifies the amount of resource "
          "guaranteed to be available for this allocation. On "
          "system which support over-commitment of resources, this "
          "value is typically used for admission control to prevent "
          "an an allocation from being accepted thus preventing starvation.\n"
          "The value of the Reservation property is expressed in "
          "the unit specified by the value of the AllocationUnits "
          "property." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.AllocationUnits" }]
   uint64 Reservation;

      [Description ( 
          "This property specifies the upper bound, or maximum "
          "amount of resource that will be granted for this "
          "allocation. For example, a system which supports memory "
          "paging may support setting the Limit of a Memory "
          "allocation below that of the VirtualQuantity, thus "
          "forcing paging to occur for this allocation.\n"
          "The value of the Limit property is expressed in the unit "
          "specified by the value of the AllocationUnits property." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.AllocationUnits" }]
   uint64 Limit;

      [Description ( 
          "This property specifies a relative priority for this "
          "allocation in relation to other allocations from the "
          "same ResourcePool. This property has no unit of measure, "
          "and is only relevant when compared to other allocations "
          "vying for the same host resources." )]
   uint32 Weight;

      [Description ( 
          "This property specifies if the resource will be "
          "automatically allocated. For example when set to true, "
          "when the consuming virtual computer system is powered "
          "on, this resource would be allocated. A value of false "
          "indicates the resource must be explicitly allocated. For "
          "example, the setting may represent removable media "
          "(cdrom, floppy, etc.) where at power on time, the media "
          "is not present. An explicit operation is required to "
          "allocate the resource." )]
   boolean AutomaticAllocation;

      [Description ( 
          "This property specifies if the resource will be "
          "automatically de-allocated. For example, when set to "
          "true, when the consuming virtual computer system is "
          "powered off, this resource would be de-allocated. When "
          "set to false, the resource will remain allocated and "
          "must be explicitly de-allocated." )]
   boolean AutomaticDeallocation;

      [Description ( 
          "The Parent of the resource. For example, a controller "
          "for the current allocation" )]
   string Parent;

      [Description ( 
          "The thing to which this resource is connected. For "
          "example, a named network or switch port." )]
   string Connection[];

      [Description ( 
          "The address of the resource. For example, the MAC "
          "address of a Ethernet port." )]
   string Address;

      [Description ( 
          "Specifies how this resource maps to underlying "
          "resourcesIf the HostResource array contains any entries, "
          "this property reflects how the resource maps to those "
          "specific resources." ), 
       ValueMap { "0", "2", "3", "4", "5", "..", "32767..65535" }, 
       Values { "Unknown", "Not Supported", "Dedicated", 
          "Soft Affinity", "Hard Affinity", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 MappingBehavior;

      [Description ( 
          "Describes the address of this resource in the context of "
          "the Parent. The Parent/AddressOnParent properties are "
          "used to describe the controller relationship as well the "
          "ordering of devices on a controller.For example, if the "
          "parent is a PCI Controller, this property would specify "
          "the PCI slot of this child device." )]
   string AddressOnParent;

      [Description ( 
          "This property specifies the units used by the "
          "VirtualQuantity property. For example\n"
          "- if ResourceType=Processor, the value of the "
          "VirtualQuantityUnits property may be set to \"count\", "
          "indicating that the value of the VirtualQuantity "
          "property is expressed as a count.\n"
          "- if ResourceType=Memory, the value of the "
          "VirtualQuantityUnits property may be set to "
          "\"bytes*10^3\", indicating that the value of the "
          "VirtualQuantity property is expressed in kilobyte.\n"
          "It is expected that profiles constrain the units that "
          "apply in context of particular resource types.\n"
          "The value of this property shall be a legal value of the "
          "Programmatic Units qualifier as defined in Annex C.1 of "
          "DSP0004 V2.5 or later." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.VirtualQuantity" }, 
       IsPUnit]
   string VirtualQuantityUnits = "count";


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "The CIM_StorageAllocationSettingData class represents settings "
       "specifically related to the allocation of virtual storage." )]
class CIM_StorageAllocationSettingData : CIM_ResourceAllocationSettingData {

      [Description ( 
          "Size in bytes of the blocks that are presented to the "
          "consumer as the result of this storage resource "
          "allocation or storage resource allocation request. If "
          "the block size is variable, then the maximum block size "
          "in bytes should be specified. If the block size is "
          "unknown or if a block concept does not apply, then the "
          "value 1 shall be used.\n"
          "NOTE: The use of 1 (and not 0) to indicate that the "
          "blocksize is unknown still allows the use of the "
          "VirtualQuantity property to convey the size in blocks of "
          "size 1).\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.BlockSize property. See the "
          "description of the CIM_StorageExtent.BlockSize property "
          "for details." ), 
       ModelCorrespondence { "CIM_StorageExtent.BlockSize" }, 
       PUnit ( "byte" )]
   uint64 VirtualResourceBlockSize;

      [Override ( "VirtualQuantity" ), 
       Description ( 
          "Number of blocks that are presented to the consumer. The "
          "blocksize is specified by the value of the "
          "VirtualResourceBlockSize property." ), 
       ModelCorrespondence { "CIM_StorageExtent.NumberOfBlocks", 
          "CIM_StorageAllocationSettingData.VirtualQuantityUnits" }]
   uint64 VirtualQuantity;

      [Override ( "VirtualQuantityUnits" ), 
       Description ( 
          "This property specifies the units used by the "
          "VirtualQuantity property. The value shall match "
          "\"count(fixed size block)\" | \"byte\".\n"
          "The default value \"count(fixed size block)\" assumes "
          "that the implementation knows a fixed block size and "
          "conveys the block size through the value of the "
          "VirtualResourceBlockSize property. However, if the "
          "VirtualResourceBlockSize property has a value \"1\", "
          "this indicates an unknown or variable block size; in "
          "this case the value of the VirtualQuantityUnit property "
          "should be set to \"byte\", such that the value of the "
          "VirtualQuantity property is measured directly in byte.\n"
          "NOTE: The IsPUnit qualifier already formally restricts "
          "the value of this property to be a unit as specified in "
          "DMTF DSP0004:2.5.0, Annex C; in addition, the normative "
          "text in the description of this property above further "
          "constrains the value to match \"byte\" | \"count(fixed "
          "size block)\"." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.VirtualQuantity" }, 
       IsPUnit]
   string VirtualQuantityUnits = "count(fixed size block)";

      [Description ( 
          "Access describes whether the allocated storage extent is "
          "1 (readable), 2 (writeable), or 3 (both).\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.Access property, except deprecated "
          "values. See the description of the "
          "CIM_StorageExtent.Access property for details." ), 
       ValueMap { "0", "1", "2", "3", ".." }, 
       Values { "Unknown", "Readable", "Writeable", 
          "Read/Write Supported", "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_StorageExtent.Access" }]
   uint16 Access;

      [Description ( 
          "Size in bytes of the blocks that are allocated at the "
          "host as the result of this storage resource allocation "
          "or storage resource allocation request. If the block "
          "size is variable, then the maximum block size in bytes "
          "should be specified. If the block size is unknown or if "
          "a block concept does not apply, then the value 1 shall "
          "be used.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.BlockSize property. See the "
          "description of the CIM_StorageExtent.BlockSize property "
          "for details." ), 
       ModelCorrespondence { "CIM_StorageExtent.BlockSize" }, 
       PUnit ( "byte" )]
   uint64 HostResourceBlockSize;

      [Override ( "Reservation" ), 
       Description ( 
          "The amount of blocks that are guaranteed to be available "
          "for this storage resource allocation at the host. The "
          "blocksize is specified by the value of the "
          "HostResourceBlockSize property." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostResourceBlockSize" }]
   uint64 Reservation;

      [Override ( "Limit" ), 
       Description ( 
          "The maximum amount of blocks that will be granted for "
          "this storage resource allocation at the host. The "
          "blocksize is specified by the value of the "
          "HostResourceBlockSize property.Usually the value this "
          "property would reflect a maximum size for the allocated "
          "host extent that matches the size of the virtual storage "
          "extent presented to the consumer. A value less than that "
          "would indicate a situation where a sparsely populated "
          "virtual storage extent is expected, where the fill rate "
          "is limited by the value of the Limit property." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostResourceBlockSize" }]
   uint64 Limit;

      [Description ( 
          "The HostExtentStartingAddress property identifies the "
          "starting address on the host storage extent identified "
          "by the value of the HostExtentName property that is used "
          "for the allocation of the virtual storage extent.\n"
          "A value of NULL indicates that there is no direct "
          "mapping of the virtual storage extent onto the "
          "referenced host storage extent.\n"
          "NOTE: This property is a copy of the "
          "CIM_BasedOn.StartingAddess property. See the description "
          "of CIM_BasedOn association for details." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostResourceBlockSize", 
          "CIM_BasedOn.StartingAddress" }]
   uint64 HostExtentStartingAddress;

      [Description ( 
          "A unique identifier for the host extent. The identified "
          "host extent is used for the storage resource allocation.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.Name property. See the description of "
          "CIM_StorageExtent.Name property for details." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentNameFormat", 
          "CIM_StorageAllocationSettingData.HostExtentNameNamespace", 
          "CIM_StorageExtent.Name" }]
   string HostExtentName;

      [Description ( 
          "The HostExtentNameFormat property identifies the format "
          "that is used for the value of the HostExtentName property.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.NameFormat property, excluding "
          "deprecated values. See the description of "
          "CIM_StorageExtent.NameFormat class for details.\n"
          "7 = Serial Number/Vendor/Model (SNVM) SNVM is 3 strings "
          "representing the vendor name, product name within the "
          "vendor namespace, and the serial number within the model "
          "namespace. Strings are delimited with a \'+\'. Spaces "
          "may be included and are significant. The serial number "
          "is the text representation of the serial number in "
          "hexadecimal upper case. This represents the vendor and "
          "model ID from SCSI Inquiry data; the vendor field MUST "
          "be 8 characters wide and the product field MUST be 16 "
          "characters wide. For example, \n"
          "\'ACME____+SUPER DISK______+124437458\' (_ is a space "
          "character) \n"
          "9 = NAA as a generic format. See \n"
          "http://standards.ieee.org/regauth/oui/tutorials/fibrecomp_id.html. "
          "Formatted as 16 or 32 unseparated uppercase hex "
          "characters (2 per binary byte). For example "
          "\'21000020372D3C73\' \n"
          "10 = EUI as a generic format (EUI64) See \n"
          "http://standards.ieee.org/regauth/oui/tutorials/EUI64.html. \n"
          "Formatted as 16 unseparated uppercase hex characters (2 "
          "per binary byte) \n"
          "11 = T10 vendor identifier format as returned by SCSI "
          "Inquiry VPD page 83, identifier type 1. See T10 SPC-3 "
          "specification. This is the 8-byte ASCII vendor ID from "
          "the T10 registry followed by a vendor specific ASCII "
          "identifier; spaces are permitted. For non SCSI volumes, "
          "\'SNVM\' may be the most appropriate choice. 12 = OS "
          "Device Name (for LogicalDisks). See LogicalDisk Name "
          "description for details." ), 
       ValueMap { "0", "1", "7", "9", "10", "11", "12", ".." }, 
       Values { "Unknown", "Other", "SNVM", "NAA", "EUI64", 
          "T10VID", "OS Device Name", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentName", 
          "CIM_StorageAllocationSettingData.OtherHostExtentNameFormat", 
          "CIM_StorageExtent.NameFormat" }]
   uint16 HostExtentNameFormat;

      [Description ( 
          "A string describing the format of the HostExtentName "
          "property if the value of the HostExtentNameFormat "
          "property is 1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentNameFormat" }]
   string OtherHostExtentNameFormat;

      [Description ( 
          "If the host extent is a SCSI volume, then the preferred "
          "source for SCSI volume names is SCSI VPD Page 83 responses.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.NameNamespace property. See the "
          "description of CIM_StorageExtent.NameNamespace class for details.\n"
          "Page 83 returns a list of identifiers for various device "
          "elements. The metadata for each identifier includes an "
          "Association field, identifiers with association of 0 "
          "apply to volumes. Page 83 supports several namespaces "
          "specified in the Type field in the identifier metadata. "
          "See SCSI SPC-3 specification. \n"
          "2 = VPD Page 83, Type 3 NAA (NameFormat SHOULD be NAA) \n"
          "3 = VPD Page 83, Type 2 EUI64 (NameFormat EUI) \n"
          "4 = VPD Page 83, Type 1 T10 Vendor Identification \n"
          "(NameFormat T10) \n"
          "Less preferred volume namespaces from other interfaces: \n"
          "5 = VPD page 80, Serial number (NameFormat SHOULD be "
          "Other) \n"
          "6 = FC NodeWWN (NameFormat SHOULD be NAA or EUI) \n"
          "7 = Serial Number/Vendor/Model (NameFormat SHOULD be "
          "SNVM) cThe preferred namespace for LogigicalDisk names "
          "is platform specific device namespace; see LogigicalDIsk "
          "Description. \n"
          "8 = OS Device Namespace." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", ".." }, 
       Values { "Unknown", "Other", "VPD83Type3", "VPD83Type2", 
          "VPD83Type1", "VPD80", "NodeWWN", "SNVM", 
          "OS Device Namespace", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentName", 
          "CIM_StorageAllocationSettingData.OtherHostExtentNameNamespace", 
          "CIM_StorageAllocationSettingData.HostExtentNameFormat", 
          "CIM_StorageExtent.NameNamespace" }]
   uint16 HostExtentNameNamespace;

      [Description ( 
          "A string describing the namespace of the HostExtentName "
          "property if the value of the HostExtentNameNamespace "
          "matches 1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentNameNamespace" }]
   string OtherHostExtentNameNamespace;


};



class UNIX_StorageAllocationSettingData : CIM_StorageAllocationSettingData
{

};

