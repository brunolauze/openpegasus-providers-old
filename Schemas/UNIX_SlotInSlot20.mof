//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "The ConnectedTo association indicates that two or more "
       "PhysicalConnectors are connected together." )]
class CIM_ConnectedTo : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Antecedent represents a PhysicalConnector that "
          "serves as one end of the connection." )]
   CIM_PhysicalConnector REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Dependent represents another PhysicalConnector that "
          "serves as the other end of the connection." )]
   CIM_PhysicalConnector REF Dependent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "Slots are special types of Connectors into which adapter Cards "
       "are typically inserted. The SlotInSlot relationship represents "
       "the ability of a special adapter to extend the existing Slot "
       "structure to enable otherwise incompatible Cards to be plugged "
       "into a Frame or Hosting Board. The adapter effectively creates "
       "a new Slot and can be thought of (conceptually) as a Slot in a "
       "Slot. This enables Cards that would otherwise be physically "
       "and/or electrically incompatible with the existing Slots to be "
       "supported, by interfacing to the Slot provided by the adapter. "
       "This has many practical uses. For example, networking boards "
       "are very expensive. As new hardware becomes available, Chassis "
       "and even Card configurations change. To protect the investment "
       "of their customers, networking vendors will manufacture "
       "special adapters that enable old Cards to fit into new Chassis "
       "or Hosting Boards and/or new Cards to fit into old. This is "
       "done using a special adapter that fits over one or more "
       "existing Slots and presents a new Slot into which the Card can "
       "plug." )]
class CIM_SlotInSlot : CIM_ConnectedTo {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Antecedent represents the existing Slot(s) of the "
          "HostingBoard, or Frame that are being adapted to "
          "accommodate a Card that would otherwise not be "
          "physically and/or electrically compatible with it." )]
   CIM_Slot REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The new Slot provided by the adapter board." )]
   CIM_Slot REF Dependent;


};



class UNIX_SlotInSlot : CIM_SlotInSlot
{

};

