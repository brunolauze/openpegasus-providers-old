//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "Capabilities is an abstract class whose subclasses describe "
       "abilities and/or potential for use. For example, one may "
       "describe the maximum number of VLANs that can be supported on "
       "a system using a subclass of Capabilities. Capabilities are "
       "tied to the elements which they describe using the "
       "ElementCapabilities association. Note that the cardinality of "
       "the ManagedElement reference is Min(1), Max(1). This "
       "cardinality mandates the instantiation of the "
       "ElementCapabilities association for the referenced instance of "
       "Capabilities. ElementCapabilities describes the existence "
       "requirements and context for the referenced instance of "
       "ManagedElement. Specifically, the ManagedElement MUST exist "
       "and provides the context for the Capabilities. Note that "
       "Capabilities do not indicate what IS configured or "
       "operational, but what CAN or CANNOT exist, be defined or be "
       "used. Note that it is possible to describe both supported and "
       "excluded abilities and functions (both capabilities and "
       "limitations) using this class." )]
class CIM_Capabilities : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "Capabilities. In addition, the user friendly name can be "
          "used as a index property for a search of query. (Note: "
          "Name does not have to be unique within a namespace.)" )]
   string ElementName;


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Core::PowerMgmt" ), 
    Description ( 
       "A class derived from Capabilities that describes the power "
       "management aspects of an element (typically a system or "
       "device). The element\'s power management capabilities are "
       "decoupled from a PowerManagementService, since a single "
       "service could apply to multiple elements, each with specific "
       "capabilities." )]
class CIM_PowerManagementCapabilities : CIM_Capabilities {

      [Description ( 
          "An enumeration indicating the specific power-related "
          "capabilities of a managed element. Since this is an "
          "array, multiple values may be specified. The current "
          "values in the enumeration are: \n"
          "0 = Unknown \n"
          "1 = Other \n"
          "2 = Power Saving Modes Entered Automatically, describing "
          "that a managed element can change its power state based "
          "on usage or other criteria \n"
          "3 = Power State Settable, indicating that the "
          "SetPowerState method is supported \n"
          "4 = Power Cycling Supported, indicating that the "
          "SetPowerState method can be invoked with the PowerState "
          "input variable set to \'Power Cycle\' \n"
          "5 = Timed Power On Supported, indicating that the "
          "SetPowerState method can be invoked with the PowerState "
          "input variable set to \'Power Cycle\' and the Time "
          "parameter set to a specific date and time, or interval, "
          "for power-on." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", 
          "Power Saving Modes Entered Automatically", 
          "Power State Settable", "Power Cycling Supported", 
          "Timed Power On Supported" }, 
       MappingStrings { "MIF.DMTF|System Power Controls|001.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.OtherPowerCapabilitiesDescriptions", 
          "CIM_PowerManagementService.SetPowerState" }]
   uint16 PowerCapabilities[];

      [Description ( 
          "An array of strings describing an element\'s additional "
          "power management capabilities, used when the "
          "PowerCapabilities array includes the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerCapabilities" }]
   string OtherPowerCapabilitiesDescriptions[];

      [Description ( 
          "An enumeration that indicates the power states supported "
          "by a managed element. Because this is an array, multiple "
          "values can be specified. The current values in the "
          "enumeration are: \n"
          "2=On, corresponding to ACPI state G0 or S0 or D0. \n"
          "3=Sleep - Light, corresponding to ACPI state G1, S1/S2, "
          "or D1. \n"
          "4=Sleep - Deep, corresponding to ACPI state G1, S3, or D2.\n"
          "5=Power Cycle (Off - Soft), corresponding to ACPI state "
          "G2, S5, or D3, but where the managed element is set to "
          "return to power state \"On\" at a pre-determined time. \n"
          "6=Off - Hard, corresponding to ACPI state G3, S5, or D3. \n"
          "7=Hibernate (Off - Soft), corresponding to ACPI state "
          "S4, where the state of the managed element is preserved "
          "and will be recovered upon powering on. \n"
          "8=Off - Soft, corresponding to ACPI state G2, S5, or D3. "
          "9= Power Cycle (Off-Hard), corresponds to the managed "
          "element reaching the ACPI state G3 followed by ACPI "
          "state S0. \n"
          "10=Master Bus Reset, corresponds to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system master bus reset. 11=Diagnostic "
          "Interrupt (NMI), corresponding to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system non-maskable interrupt. 12=Off - Soft "
          "Graceful, equivalent to Off Soft but preceded by a "
          "request to the managed element to perform an "
          "orderlyshutdown. \n"
          "13=Off - Hard Graceful, equivalent to Off Hard but "
          "preceded by a request to the managed element to perform "
          "an orderly shutdown. \n"
          "14=Master Bus Rest Graceful, equivalent to Master Bus "
          "Reset but preceded by a request to the managed element "
          "to perform an orderly shutdown. \n"
          "15=Power Cycle (Off - Soft Graceful), equivalent to "
          "Power Cycle (Off - Soft) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "16=Power Cycle (Off - Hard Graceful), equivalent to "
          "Power Cycle (Off - Hard) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "..=DMTF Reserved. \n"
          "0x7FFF..0xFFFF = Vendor Specific." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "..", "0x7FFF..0xFFFF" }, 
       Values { "Other", "On", "Sleep - Light", "Sleep -Deep", 
          "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Off - Soft Graceful", 
          "Off - Hard Graceful", "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", "DMTF Reserved", 
          "Vendor Specific" }, 
       MappingStrings { "IEEE P1621 | 3.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementService.RequestPowerStateChange", 
          "CIM_AssociatedPowerManagementService.PowerState" }]
   uint16 PowerStatesSupported[];

      [Description ( 
          "An enumeration indicating the specific power-related "
          "capabilities of a managed element. Since this is an "
          "array, multiple values may be specified. The current "
          "values in the enumeration are: \n"
          "0 = Unknown \n"
          "1 = Other \n"
          "2 = Power Saving Modes Entered Automatically, describing "
          "that a managed element can change its power state based "
          "on usage or other criteria \n"
          "3 = Power State Settable, indicating that the "
          "RequestPowerStateChange method is supported \n"
          "4 = Power Cycling Supported, indicating that the "
          "RequestPowerStateChange method can be invoked with the "
          "PowerState input variable set to \'Power Cycle (Off "
          "Soft)\' \n"
          "5 = Timed Power On Supported, indicating that the "
          "RequestPowerStateChange method can be invoked with the "
          "PowerState input variable set to \'Power On\' and the "
          "Time parameter set to a specific date and time, or "
          "interval, for power-on.8 = Graceful Shutdown Supported, "
          "indicating that the managed element can be sent a "
          "hardware signal requesting an orderly shutdown prior to "
          "the requested power state change." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", 
          "Power Saving Modes Entered Automatically", 
          "Power State Settable", "Power Cycling Supported", 
          "Timed Power On Supported", 
          "Off Hard Power Cycling Supported", "HW Reset Supported", 
          "Graceful Shutdown Supported" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementService.RequestPowerStateChange", 
          "CIM_PowerManagementCapabilities.OtherPowerChangeCapabilities" }]
   uint16 PowerChangeCapabilities[];

      [Description ( 
          "A string describing the additional power management "
          "capabilities of the element, used when the "
          "PowerChangeCapabilities is set to the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerChangeCapabilities" }]
   string OtherPowerChangeCapabilities;

      [Description ( 
          "An enumeration that indicates the requested power states "
          "supported by the power management service. Because this "
          "is an array, multiple values can be specified. The "
          "current values in the enumeration are: \n"
          "2=On, corresponding to ACPI state G0 or S0 or D0. \n"
          "3=Sleep - Light, corresponding to ACPI state G1, S1/S2, "
          "or D1. \n"
          "4=Sleep - Deep, corresponding to ACPI state G1, S3, or D2.\n"
          "5=Power Cycle (Off - Soft), corresponding to ACPI state "
          "G2, S5, or D3, but where the managed element is set to "
          "return to power state \"On\" at a pre-determined time. \n"
          "6=Off - Hard, corresponding to ACPI state G3, S5, or D3. \n"
          "7=Hibernate (Off - Soft), corresponding to ACPI state "
          "S4, where the state of the managed element is preserved "
          "and will be recovered upon powering on. \n"
          "8=Off - Soft, corresponding to ACPI state G2, S5, or D3. "
          "9= Power Cycle (Off-Hard), corresponds to the managed "
          "element reaching the ACPI state G3 followed by ACPI "
          "state S0. \n"
          "10=Master Bus Reset, corresponds to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system master bus reset. 11=Diagnostic "
          "Interrupt (NMI), corresponding to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system non-maskable interrupt. 12=Off - Soft "
          "Graceful, equivalent to Off Soft but preceded by a "
          "request to the managed element to perform an "
          "orderlyshutdown. \n"
          "13=Off - Hard Graceful, equivalent to Off Hard but "
          "preceded by a request to the managed element to perform "
          "an orderly shutdown. \n"
          "14=Master Bus Rest Graceful, equivalent to Master Bus "
          "Reset but preceded by a request to the managed element "
          "to perform an orderly shutdown. \n"
          "15=Power Cycle (Off - Soft Graceful), equivalent to "
          "Power Cycle (Off - Soft) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "16=Power Cycle (Off - Hard Graceful), equivalent to "
          "Power Cycle (Off - Hard) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "17=Diagnostic Interrupt (INIT), equivalent to Diagnostic "
          "Interrupt (NMI) but performed by an INIT switch instead "
          "because the NMI signal is masked. \n"
          "..=DMTF Reserved. \n"
          "0x7FFF..0xFFFF = Vendor Specific." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "..", 
          "0x7FFF..0xFFFF" }, 
       Values { "Other", "On", "Sleep - Light", "Sleep -Deep", 
          "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Off - Soft Graceful", 
          "Off - Hard Graceful", "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", 
          "Diagnostic Interrupt (INIT)", "DMTF Reserved", 
          "Vendor Specific" }, 
       MappingStrings { "IEEE P1621 | 3.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerStatesSupported", 
          "CIM_PowerManagementService.RequestPowerStateChange", 
          "CIM_AssociatedPowerManagementService.PowerState" }]
   uint16 RequestedPowerStatesSupported[];


};



class UNIX_PowerManagementCapabilities : CIM_PowerManagementCapabilities
{

};

