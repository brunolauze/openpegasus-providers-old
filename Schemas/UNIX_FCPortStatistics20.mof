//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalData is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedElements. These statistics MUST represent "
       "the most recent observations and MUST NOT be provided if "
       "irrelevant or stale. Note that this class uses a simplified "
       "naming/identity algorithm as compared to "
       "CIM_StatisticalInformation." )]
class CIM_StatisticalData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "StatisticalData. In addition, the user friendly name can "
          "be used as a index property for a search of query. "
          "(Note: Name does not have to be unique within a "
          "namespace.)" )]
   string ElementName;

      [Description ( 
          "The time, relative to managed element where the "
          "statistic was collected, when the first measurement was "
          "taken. If the statistic is reset, the StartStatisticTime "
          "is the time when the reset was performed." )]
   datetime StartStatisticTime;

      [Description ( 
          "The time the most recent measurement was taken, relative "
          "to the managed element where the statistic was "
          "collected." )]
   datetime StatisticTime;

      [Description ( 
          "Some statistics are sampled at consistent time "
          "intervals. This property provides the sample interval so "
          "that client applications can determine the minimum time "
          "that new statistics should be pulled. If the statistics "
          "are not sampled at consistent time intervals, this "
          "property must be set to a zero time interval." )]
   datetime SampleInterval = "00000000000000.000000:000";


      [Description ( 
          "Method to reset one or more of the instance\'s "
          "statistics. The method takes one parameter as input - an "
          "array of strings indicating which statistics to reset. "
          "If all the statistics in the instance should be reset, "
          "the first element of the array MUST be set to \"All\" or "
          "\"ALL\". If one or more individual statistics should be "
          "reset, the corresponding property names are entered into "
          "the elements of the array. \n"
          "The method returns 0 if successful, 1 if not supported, "
          "and any other value if an error occurred. A method is "
          "specified so that the StatisticalInformation\'s "
          "provider/ instrumentation, which calculates the "
          "statistics, can reset its internal processing, counters, "
          "etc. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetSelectedStats(
         [IN, Description ( 
             "Array of strings indicating which statistics to reset."
              )]
      string SelectedStatistics[]);

};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "The NetworkPortStatistics class describes the statistics for "
       "the NetworkPort." )]
class CIM_NetworkPortStatistics : CIM_StatisticalData {

      [Description ( 
          "The total number of bytes that are transmitted, "
          "including framing characters." ), 
       Units ( "Bytes" ), 
       Counter, MappingStrings { "MIB.IETF|MIB-II.ifOutOctets", 
          "MIF.DMTF|Network Adapter 802 Port|001.7" }, 
       PUnit ( "byte" )]
   uint64 BytesTransmitted;

      [Description ( 
          "The total number of bytes that are received, including "
          "framing characters." ), 
       Units ( "Bytes" ), 
       Counter, MappingStrings { "MIB.IETF|MIB-II.ifInOctets", 
          "MIF.DMTF|Network Adapter 802 Port|001.9" }, 
       PUnit ( "byte" )]
   uint64 BytesReceived;

      [Description ( 
          "The total number of packets that are transmitted." ), 
       Counter]
   uint64 PacketsTransmitted;

      [Description ( 
          "The total number of packets that are received." ), 
       Counter]
   uint64 PacketsReceived;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( "FCPortStatistics is the statistics for the FCPort." )]
class CIM_FCPortStatistics : CIM_NetworkPortStatistics {

      [Description ( 
          "LIPCount is the number of LIP events that have occurred "
          "on an arbitrated loop." ), 
       Counter]
   uint64 LIPCount;

      [Description ( 
          "NOSCount is the number of NOS events that have occurred "
          "on the switched fabric." ), 
       Counter]
   uint64 NOSCount;

      [Description ( 
          "ErrorFrames is the number of frames that have been "
          "received in error." ), 
       Counter]
   uint64 ErrorFrames;

      [Description ( 
          "DumpedFrames is the number of frames that were lost due "
          "to a lack of host buffers available." ), 
       Counter]
   uint64 DumpedFrames;

      [Description ( 
          "LinkFailure is the number of times that a link error has "
          "occurred. This count is part of the Link Error Status "
          "Block (LESB)." ), 
       Counter]
   uint64 LinkFailures;

      [Description ( 
          "Number of times the signal is lost on the Port since the "
          "last reset of the Device. This count is part of the Link "
          "Error Status Block (LESB)." ), 
       Counter]
   uint64 LossOfSignalCounter;

      [Description ( 
          "Number of times that synchronization is lost on the Port "
          "since the last reset of the Device. Synchronization is "
          "assumed lost after a timeout period (identified by the "
          "Receiver TransmitterTimeout property) is exceeded. This "
          "count is part of the Link Error Status Block (LESB)." ), 
       Counter]
   uint64 LossOfSyncCounter;

      [Description ( 
          "Count of primitive sequence protocol errors that are "
          "detected at this port. This count is part of the Link "
          "Error Status Block (LESB)." ), 
       Counter]
   uint64 PrimitiveSeqProtocolErrCount;

      [Description ( 
          "Number of times that the CRC in a frame does not match "
          "the CRC that is computed by the receiver. This count is "
          "part of the Link Error Status Block (LESB)." ), 
       Counter]
   uint64 CRCErrors;

      [Description ( 
          "The number of transmission words that had an invalid "
          "character (8b10b code violation) in one or more of its "
          "characters, had a K28.5 (8b10b control) in its second, "
          "third, or fourth character position, or had an incorrect "
          "Beginning Running Disparity. This count is part of the "
          "Link Error Status Block (LESB)." ), 
       Counter]
   uint64 InvalidTransmissionWords;

      [Description ( 
          "The number of frames received that were shorter than 28 "
          "octets. The value of 28 is calculated based on an "
          "assumption of 24 header bytes plus 4 CRC bytes. The "
          "count does not include SOF/EOF bytes, which are not "
          "data." ), 
       Counter]
   uint64 FramesTooShort;

      [Description ( 
          "The number of frames received that were longer than 2140 "
          "octets. The value of 2140 is calculated based on an "
          "assumption of 24 header bytes plus 4 CRC bytes and 2112 "
          "bytes of payload." ), 
       Counter]
   uint64 FramesTooLong;

      [Description ( 
          "Count of frames received with unknown addressing. An "
          "example is an unknown SID or DID. The SID or DID is not "
          "known to the routing algorithm." ), 
       Counter]
   uint64 AddressErrors;

      [Description ( 
          "Count of occurrences when all input buffers of a port "
          "were full and outbound buffer-to-buffer credit was "
          "transitioned to zero. There is no credit to provide to "
          "the other side." ), 
       Counter]
   uint64 BufferCreditNotProvided;

      [Description ( 
          "Count of transitions in or out of BBcredit zero state. "
          "The other side is not providing any credit." ), 
       Counter]
   uint64 BufferCreditNotReceived;

      [Description ( 
          "Count of invalid frame delimiters that are received at "
          "this port. An example is a frame with a class 2 start "
          "and a class 3 at the end." ), 
       Counter]
   uint64 DelimiterErrors;

      [Description ( 
          "Count of disparity errors that are received at this port." ), 
       Counter]
   uint64 EncodingDisparityErrors;

      [Description ( 
          "Count of Link resets. This count is the number of LRs received."
           ), 
       Counter]
   uint64 LinkResetsReceived;

      [Description ( 
          "Count of Link resets. This count is the number of LRs transmitted."
           ), 
       Counter]
   uint64 LinkResetsTransmitted;

      [Description ( 
          "Count of Multicast Frames or Packets received." ), 
       Counter]
   uint64 MulticastFramesReceived;

      [Description ( 
          "Count of Multicast Frames or Packets transmitted." ), 
       Counter]
   uint64 MulticastFramesTransmitted;

      [Description ( 
          "FBSYFrames is the number of times that FBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_FBSY" }]
   uint64 FBSYFrames;

      [Description ( 
          "PBSYFrames is the number of times that PBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_PBSY" }]
   uint64 PBSYFrames;

      [Description ( 
          "FRJTFrames is the number of times that FRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_FRJT" }]
   uint64 FRJTFrames;

      [Description ( 
          "PRJTFrames is the number of times that PRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_PRJT" }]
   uint64 PRJTFrames;

      [Description ( 
          "RXClass1Frames is the number of class 1 frames received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1RF" }]
   uint64 RXClass1Frames;

      [Description ( 
          "TXClass1Frames is the number of class 1 frames transmitted."
           ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1TF" }]
   uint64 TXClass1Frames;

      [Description ( 
          "Class1FBSY is the number of times that FBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1FB" }]
   uint64 Class1FBSY;

      [Description ( 
          "Class1PBSY is the number of times that PBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1PB" }]
   uint64 Class1PBSY;

      [Description ( 
          "Class1FRJT is the number of times that FRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1FR" }]
   uint64 Class1FRJT;

      [Description ( 
          "Class1PRJT is the number of times that PRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1PR" }]
   uint64 Class1PRJT;

      [Description ( 
          "RXClass2Frames is the number of class 2 frames received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2RF" }]
   uint64 RXClass2Frames;

      [Description ( 
          "TXClass2Frames is the number of class 2 frames transmitted."
           ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2LF" }]
   uint64 TXClass2Frames;

      [Description ( 
          "Class2FBSY is the number of times that FBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2FB" }]
   uint64 Class2FBSY;

      [Description ( 
          "Class2PBSY is the number of times that PBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2PB" }]
   uint64 Class2PBSY;

      [Description ( 
          "Class2FRJT is the number of times that FRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2FR" }]
   uint64 Class2FRJT;

      [Description ( 
          "Class2PRJT is the number of times that PRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2PR" }]
   uint64 Class2PRJT;

      [Description ( 
          "RXClass3Frames is the number of class 3 frames received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C3RF" }]
   uint64 RXClass3Frames;

      [Description ( 
          "TXClass3Frames is the number of class 3 frames transmitted."
           ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C3TF" }]
   uint64 TXClass3Frames;

      [Description ( 
          "Class3FramesDiscarded is the number of class 3 frames "
          "that were discarded upon reception." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C3DC" }]
   uint64 Class3FramesDiscarded;

      [Description ( 
          "RXBroadcastFrames is the number of broadcast frames or "
          "packets received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_RBCO" }]
   uint64 RXBroadcastFrames;

      [Description ( 
          "TXBroadcastFrames is the number of broadcast frames or "
          "packets transmitted." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_TBCO" }]
   uint64 TXBroadcastFrames;


};



class UNIX_FCPortStatistics : CIM_FCPortStatistics
{

};

