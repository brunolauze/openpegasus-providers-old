//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "Capabilities is an abstract class whose subclasses describe "
       "abilities and/or potential for use. For example, one may "
       "describe the maximum number of VLANs that can be supported on "
       "a system using a subclass of Capabilities. Capabilities are "
       "tied to the elements which they describe using the "
       "ElementCapabilities association. Note that the cardinality of "
       "the ManagedElement reference is Min(1), Max(1). This "
       "cardinality mandates the instantiation of the "
       "ElementCapabilities association for the referenced instance of "
       "Capabilities. ElementCapabilities describes the existence "
       "requirements and context for the referenced instance of "
       "ManagedElement. Specifically, the ManagedElement MUST exist "
       "and provides the context for the Capabilities. Note that "
       "Capabilities do not indicate what IS configured or "
       "operational, but what CAN or CANNOT exist, be defined or be "
       "used. Note that it is possible to describe both supported and "
       "excluded abilities and functions (both capabilities and "
       "limitations) using this class." )]
class CIM_Capabilities : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "Capabilities. In addition, the user friendly name can be "
          "used as a index property for a search of query. (Note: "
          "Name does not have to be unique within a namespace.)" )]
   string ElementName;


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "EnabledLogicalElementCapabilities describes the capabilities "
       "supported for changing the state of the associated "
       "EnabledLogicalElement." )]
class CIM_EnabledLogicalElementCapabilities : CIM_Capabilities {

      [Description ( 
          "Boolean indicating whether the ElementName can be modified."
           ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|EditName" }, 
       ModelCorrespondence { "CIM_ManagedElement.ElementName" }]
   boolean ElementNameEditSupported;

      [Description ( "Maximum supported ElementName length." ), 
       MaxValue ( 256 ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|MaxNameChars" }, 
       ModelCorrespondence { 
          "CIM_FCSwitchCapabilities.ElementNameEditSupported", 
          "CIM_EnabledLogicalElementCapabilities.ElementNameMask" }]
   uint16 MaxElementNameLen;

      [Description ( 
          "RequestedStatesSupported indicates the possible states "
          "that can be requested when using the method "
          "RequestStateChange on the EnabledLogicalElement." ), 
       ValueMap { "2", "3", "4", "6", "7", "8", "9", "10", "11" }, 
       Values { "Enabled", "Disabled", "Shut Down", "Offline", 
          "Test", "Defer", "Quiesce", "Reboot", "Reset" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestStateChange" }]
   uint16 RequestedStatesSupported[];

      [Description ( 
          "This string expresses the restrictions on "
          "ElementName.The mask is expressed as a regular "
          "expression.See DMTF standard ABNF with the Management "
          "Profile Specification Usage Guide, appendix C for the "
          "regular expression syntax permitted. \n"
          "Since the ElementNameMask can describe the maximum "
          "length of the ElementName,any length defined in the "
          "regexp is in addition to the restriction defined in "
          "MaxElementNameLen (causing the smaller value to be the "
          "maximum length) The ElementName value satisfies the "
          "restriction, if and only if it matches the regular "
          "expression" ), 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElementCapabilities.MaxElementNameLen" }]
   string ElementNameMask;


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "RedirectionServiceCapabilities describes the capabilities of "
       "the associated RedirectionService." )]
class CIM_RedirectionServiceCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "SharingModeSupported indicates the possible values to "
          "which the SharingMode of the associated "
          "RedirectionService can be set." ), 
       ValueMap { "0", "2", "3", ".." }, 
       Values { "Unknown", "Exclusive", "Shared", "DMTF Reserved" }]
   uint16 SharingModeSupported[];


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::USBRedirection" ), 
    Description ( 
       "USBRedirectionCapabilities describes the capabilities of the "
       "USB Redirection Service." )]
class CIM_USBRedirectionCapabilities : CIM_RedirectionServiceCapabilities {

      [Description ( 
          "The connection mode used to configure the session. A "
          "value set to 2 = \"Listen\" shall indicate that the SAP "
          "will listen for a connection request from the remote USB "
          "redirection server. A CIM_BindsTo association to a "
          "CIM_ProtocolEndoint may be used to represent where the "
          "SAP is listening for the connection request. A value set "
          "to 3 = \"Connect\" shall indicate that the the SAP shall "
          "initiate the connection to the remote USB redirection "
          "server. A CIM_RemoteAccessAvailableToElement association "
          "to a CIM_RemoteServiceAccessPoint may be used to "
          "represent where the SAP shall connect to the remote USB "
          "redirection server." ), 
       ValueMap { "0", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Listen", "Connect", "DMTF Reserved", 
          "Vendor Specified" }, 
       ModelCorrespondence { "CIM_USBRedirectionSAP.ConnectionMode" }]
   uint16 ConnectionModesSupported[];

      [Description ( 
          "An enumeration indicating the USB specification versions "
          "which are supported. The property is expressed as a "
          "Binary-Coded Decimal (BCD) where a decimal point is "
          "implied between the 2nd and 3rd digits. For example, a "
          "value of 0x0201 indicates that version 2.01 is "
          "supported. Note that each entry of this array is related "
          "to the entries of the ClassesSupported, "
          "SubClassesSupported, MaxDevicesSupported and "
          "MaxDevicesPerSAP arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bcdUSB" }, 
       ModelCorrespondence { "CIM_USBDevice.USBVersion", 
          "CIM_USBRedirectionCapabilities.ClassesSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint16 USBVersionsSupported[];

      [Description ( 
          "An enumeration indicating the USB Device Classes which "
          "are supported. Note that each entry of this array is "
          "related to the entries of the USBVersionsSupported, "
          "SubClassesSupported, MaxDevicesSupported, and "
          "MaxDevicesPerSAP arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bDeviceClass" }, 
       ModelCorrespondence { "CIM_USBDevice.ClassCode", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint8 ClassesSupported[];

      [Description ( 
          "An enumeration indicating the USB Device SubClasses "
          "which are supported. Note that each entry of this array "
          "is related to the entries of the USBVersionsSupported, "
          "ClassesSupproted, MaxDevicesSupported, and "
          "MaxDevicesPerSAP arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bDeviceSubClass" }, 
       ModelCorrespondence { "CIM_USBDevice.SubclassCode", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.ClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint8 SubClassesSupported[];

      [Description ( 
          "An enumeration indicating the number of USB devices "
          "which are supported for the devices specified in the "
          "USBVersionsSupported, ClassesSupported, and "
          "SubClassesSupported array properties. Note that each "
          "entry of this array is related to the entries in the "
          "USBVersionsSupported, ClassesSupported, and "
          "SubClassesSupported arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_USBRedirectionCapabilities.ClassesSupported", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint16 MaxDevicesSupported[];

      [Description ( 
          "An enumeration indicating the number of USB devices per "
          "USB Redirection Session which are supported for the "
          "devices specified in the USBVersionsSupported, "
          "ClassesSupported, and SubClassesSupported array "
          "properties. Note that each entry of this array is "
          "related to the entries in the USBVersionsSupported, "
          "ClassesSupported, and SubClassesSupported arrays that "
          "are located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.ClassesSupported" }]
   uint16 MaxDevicesPerSAP[];

      [Description ( 
          "An enumeration indicating the whether instances of "
          "USBRedirectionSAPs already exist and whether whether "
          "SAPs can be created. A value set to 2 = \"Pre-Configured "
          "SAPs\" shall indicate that instances of "
          "CIM_USBRedirectionSAP exists which can be enabled. A "
          "value set to 3 = \"Create SAPs\" shall indicate that "
          "instances of CIM_USBRedirectionSAP can be created with "
          "the CreateDevice() and CreateSession() methods. A value "
          "set to 4 = \"Modify Timeouts\" shall indicate that the "
          "timeout parameters of instances of CIM_USBRedirectionSAP "
          "can be modified by applications using \'ModifyInstance\'" ), 
       ValueMap { "0", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Pre-Configured SAPs", "Create SAPs", 
          "Modify SAP", "DMTF Reserved", "Vendor Specified" }]
   uint16 SAPCapabilitiesSupported[];

      [Description ( 
          "An enumeration indicating the RequestedStatesSupported "
          "capabilities that may be used when creating a new SAP, "
          "if SAPCapabilitiesSupported has a value of 3, \'Create "
          "SAPs\', otherwise ignored" ), 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElementCapabilities.RequestedStatesSupported", 
          "CIM_USBRedirectionCapabilities.SAPCapabilitiesSupported" }]
   uint16 RequestedStatesSupportedForCreatedSAP[];

      [Description ( 
          "An enumeration indicating which of the formats for "
          "CIM_RemoteServiceAcccessPoint.InfoFormat are supported "
          "by the USB Redirection Service. When a USB Redirection "
          "Session is configured with ConnectionMode = 3 \'Connect\' "
          "the USB Redirection SAP needs to know the remote service "
          "access point to connect to. The "
          "CIM_RemoteServiceAccessPoint class is used to model this "
          "information. InfoFormat describes the address format for "
          "CIM_RemoteServiceAccessPoint.AccessInfo. which tells the "
          "local SAP where to find the USB redirection remote "
          "access point modeled by CIM_RemoteServiceAccessPoint. "
          "InfoFormatsSupported describes the AccessInfo formats "
          "that are supported by the local USB Redirection Service." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "100", "101", "102", "103", "104", 
          "200", "201", "202", "203", "204", "205", "..", 
          "32768..65535" }, 
       Values { "Other", "Host Name", "IPv4 Address", 
          "IPv6 Address", "IPX Address", "DECnet Address", 
          "SNA Address", "Autonomous System Number", "MPLS Label", 
          "IPv4 Subnet Address", "IPv6 Subnet Address", 
          "IPv4 Address Range", "IPv6 Address Range", "Dial String", 
          "Ethernet Address", "Token Ring Address", "ATM Address", 
          "Frame Relay Address", "URL", "FQDN", "User FQDN", 
          "DER ASN1 DN", "DER ASN1 GN", "Key ID", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.InfoFormat" }]
   uint16 InfoFormatsSupported[];

      [Description ( 
          "SingleClassPerSAP indicates that only instances of "
          "CIM_USBDevice whose ClassCode property have the same "
          "value as each other shall be associated with the "
          "instances of CIM_USBRedirectionSAP." ), 
       ModelCorrespondence { "CIM_USBDevice.ClassCode" }]
   boolean SingleClassPerSAP;


};



class UNIX_USBRedirectionCapabilities : CIM_USBRedirectionCapabilities
{

};

