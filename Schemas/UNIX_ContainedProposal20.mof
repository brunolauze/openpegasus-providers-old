//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Component is a generic association used to establish \'part "
       "of\' relationships between Managed Elements. For example, it "
       "could be used to define the components or parts of a System." )]
class CIM_Component {

      [Key, Aggregate, Description ( 
          "The parent element in the association." )]
   CIM_ManagedElement REF GroupComponent;

      [Key, Description ( "The child element in the association." )]
   CIM_ManagedElement REF PartComponent;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "ContainedProposal holds an ordered list of SAProposals that "
       "make up an SANegotiationAction. If the referenced "
       "NegotiationAction is an IKEAction, then the SAProposal objects "
       "MUST be IKEProposals. If the referenced NegotiationAction "
       "object is an IPsecTransport/TunnelAction, then the referenced "
       "SAProposal objects MUST be IPsecProposals." ), 
    MappingStrings { "IPSP Policy Model.IETF|ContainedProposal" }]
class CIM_ContainedProposal : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The SANegotiationAction containing a list of SAProposals." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedProposal.GroupComponent" }]
   CIM_SANegotiationAction REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The SAProposal in this negotiation action." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedProposal.PartComponent" }]
   CIM_SAProposal REF PartComponent;

      [Description ( 
          "SequenceNumber indicates the ordering to be used when "
          "chosing from among the proposals. Lower-valued proposals "
          "are preferred over proposals with higher values. For "
          "ContainedProposals that reference the same "
          "SANegotiationAction, SequenceNumber values MUST be "
          "unique." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedProposal.SequenceNumber" }]
   uint16 SequenceNumber;


};



class UNIX_ContainedProposal : CIM_ContainedProposal
{

};

