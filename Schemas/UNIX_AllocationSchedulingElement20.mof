//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};


// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "SchedulingElement represents the configuration information "
       "that a PacketSchedulingService has for one of the elements "
       "that it is scheduling. The scheduled element is either a "
       "QueuingService or another Packet SchedulingService. \n"
       "\n"
       "Among the subclasses of this class, some are defined in such a "
       "way that all of their instances are work conserving. Other "
       "subclasses, however, have instances that either are or are not "
       "work conserving. In this class, the boolean property "
       "WorkConserving indicates whether an instance is or is not work "
       "conserving. Note that WorkConserving is restricted to TRUE in "
       "the subclasses that are inherently work conserving, since "
       "instances of these classes cannot be anything else." )]
class CIM_SchedulingElement : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Write, Description ( 
          "A boolean property indicating whether the "
          "PacketSchedulingService tied to this instance (by the "
          "ElementInSchedulingService aggregation) is treating the "
          "queue/input tied to this instance, in a work-conserving "
          "manner. The queue/input is indicated by either the "
          "QueueToSchedule or SchedulingServiceToSchedule "
          "association. Note that this property is writeable, "
          "indicating that an administrator can change the behavior "
          "of the SchedulingElement - but only for those elements "
          "that can operate in a non-work conserving mode." )]
   boolean WorkConserving;


};


// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class is a subclass of the abstract class "
       "SchedulingElement. It introduces five new properties to "
       "support bandwidth-based scheduling. As is the case with all "
       "subclasses of SchedulingElement, the input associated with an "
       "instance of AllocationSchedulingElement is of one of two "
       "types: either a queue, or another scheduler." )]
class CIM_AllocationSchedulingElement : CIM_SchedulingElement {

      [Description ( 
          "A 16-bit unsigned integer enumeration that identifies "
          "the units in which the BandwidthAllocation and "
          "BurstAllocation properties are expressed. The following "
          "values are defined: \n"
          "- Bytes(1) \n"
          "- Packets(2) \n"
          "- Cells(3) (fixed-size, for example, ATM) \n"
          "If no value is specified, 1 (\"Bytes\") should be "
          "assumed." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Bytes", "Packets", "Cells" }]
   uint16 AllocationUnits;

      [Description ( 
          "A 32-bit bit unsigned integer defining the number of "
          "\'units\' per second that should be allocated to the "
          "associated input. \'Units\' are identified by the "
          "AllocationUnits property." ), 
       ModelCorrespondence { 
          "CIM_AllocationSchedulingElement.AllocationUnits" }]
   uint32 BandwidthAllocation;

      [Description ( 
          "A 32-bit bit unsigned integer specifying the amount of "
          "temporary or short-term bandwidth (in \'units\' per "
          "second) that can be allocated to an input, beyond the "
          "amount of bandwidth allocated through the "
          "BandwidthAllocation property. If the maximum actual "
          "bandwidth allocation for the input were to be measured, "
          "it would be the sum of the BurstAllocation and the "
          "BandwidthAllocation properties. \'Units\' are identified "
          "by the AllocationUnits property." ), 
       ModelCorrespondence { 
          "CIM_AllocationSchedulingElement.AllocationUnits" }]
   uint32 BurstAllocation;

      [Description ( 
          "A boolean property that, if TRUE, enables unused "
          "bandwidth from the associated input to be allocated to "
          "other inputs serviced by the Scheduler." )]
   boolean CanShare;

      [Description ( 
          "A boolean property that, if TRUE, indicates that the "
          "behavior of the scheduler relative to this input can be "
          "altered by changing the value of the inherited property, "
          "WorkConserving." )]
   boolean WorkFlexible;


};



class UNIX_AllocationSchedulingElement : CIM_AllocationSchedulingElement
{

};

